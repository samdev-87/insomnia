_id: spc_e66a76bad9874245b7a980e8c141ebc3
type: ApiSpec
parentId: wrk_0cbbda0e0d834afba3ca8f2b9b63139a
modified: 1659077367555
created: 1658988902995
fileName: HeadHunter API 1.0.0
contents: >
  components:
    examples:
      AddEmployerManager:
        value:
          additional_phone:
            city: '916'
            comment: личный
            country: '7'
            number: '4555555'
          area:
            id: '1'
          email: employer@example.com
          first_name: Илья
          is_main_contact_person: false
          last_name: Федотов
          manager_type:
            id: manager
          middle_name: Игоревич
          permissions:
            - id: can_create_vacancy
            - id: can_view_resume_contacts
          phone:
            city: '495'
            comment: с 9 до 17
            country: '7'
            number: '1568055'
          position: Менеджер по подбору персонала
      EditEmployerManagers:
        value:
          additional_phone:
            city: '916'
            comment: личный
            country: '7'
            number: '4555555'
          permissions:
            - id: can_create_vacancy
              name: Создание и продление вакансий
            - id: can_view_resume_contacts
              name: Просмотр контактов соискателей
          phone:
            city: '495'
            comment: с 9 до 17
            country: '7'
            number: '1568055'
          position: Менеджер по подбору персонала
      EmployerManagerId:
        value:
          id: '78789890'
      EmployerManagerInfo:
        value:
          additional_phone:
            city: '916'
            comment: личный
            country: '7'
            number: '4555555'
          area:
            id: '1'
            name: Москва
            url: 'https://api.hh.ru/areas/1'
          email: employer@example.com
          first_name: Иван
          full_name: Иванов Иван Иванович
          id: '1507922'
          is_main_contact_person: false
          last_name: Иванов
          manager_type:
            id: manager
            name: Менеджер
          middle_name: Иванович
          permissions:
            - id: can_create_vacancy
              name: Создание и продление вакансий
            - id: can_view_resume_contacts
              name: Просмотр контактов соискателей
          phone:
            city: '495'
            comment: с 9 до 17
            country: '7'
            number: '1568055'
          position: Менеджер по подбору персонала
          vacancies_count: 0
      EmployerManagerLimits:
        value:
          left:
            resume_view: 50
          limits:
            resume_view: 100
          spend:
            resume_view: 1
      EmployerManagerTypes:
        value:
          items:
            - available_permissions:
                - id: can_create_vacancy
                  name: Создание и продление вакансий
                - id: can_view_resume_contacts
                  name: Просмотр контактов соискателей
              id: manager
              name: Менеджер
      EmployerManagers:
        value:
          found: 1
          items:
            - additional_phone:
                city: '916'
                comment: личный
                country: '7'
                number: '4555555'
              area:
                id: '1'
                name: Москва
                url: 'https://api.hh.ru/areas/1'
              email: employer@example.com
              first_name: Иван
              full_name: Иванов Иван Иванович
              id: '1507922'
              is_main_contact_person: false
              last_name: Иванов
              middle_name: Иванович
              phone:
                city: '495'
                comment: с 9 до 17
                country: '7'
                number: '1568055'
              position: Менеджер по подбору персонала
              vacancies_count: 0
          page: 0
          pages: 1
          per_page: 20
      EmployerServices:
        value:
          items:
            - activated_at: '2018-02-01T12:00:00+0300'
              balance: null
              expires_at: '2019-01-31T12:00:00+0300'
              id: '12345678'
              service_type:
                id: API_UNLIMITED
                name: Доступ к API HH
            - activated_at: '2019-02-01T12:00:00+0300'
              balance:
                actual: 10000
                initial: 10000
              expires_at: '2020-01-31T12:00:00+0300'
              id: '12345680'
              service_type:
                id: API_LIMITED
                name: Пакет запросов к API HH
      EmployersEmployerInfoExample:
        value:
          alternate_url: 'https://hh.ru/employer/1455'
          area:
            id: '113'
            name: Россия
            url: 'https://api.hh.ru/areas/113'
          branded_description: <style>...</style><div>...</div><script></script>
          description: ...
          id: '1455'
          industries:
            - id: '7.540'
              name: Разработка программного обеспечения
            - id: '9.399'
              name: Мобильная связь
          insider_interviews:
            - id: '12345'
              title: Лучшие из лучших
              url: 'https://hh.ru/interview/12345?employerId=1455'
            - id: '54321'
              title: История успеха
              url: 'https://hh.ru/interview/54321?employerId=1455'
          logo_urls:
            '90': 'https://hh.ru/employer-logo/289027.png'
            '240': 'https://hh.ru/employer-logo/289169.png'
            original: 'https://hh.ru/file/2352807.png'
          name: HeadHunter
          open_vacancies: 19
          relations: []
          site_url: 'https://hh.ru'
          trusted: true
          type: company
          vacancies_url: 'https://api.hh.ru/vacancies?employer_id=1455'
      EmployersEmployersExample:
        value:
          found: 1
          items:
            - alternate_url: 'https://hh.ru/employer/1455'
              id: '1455'
              logo_urls:
                '90': 'https://hh.ru/employer-logo/289027.png'
              name: HeadHunter
              open_vacancies: 19
              url: 'https://api.hh.ru/employers/1455'
              vacancies_url: 'https://api.hh.ru/vacancies?employer_id=1455'
          page: 0
          pages: 1
          per_page: 20
      Languages:
        value:
          - id: ita
            name: Итальянский
          - id: nld
            name: Голландский
          - id: ell
            name: Греческий
      Locales:
        value:
          - current: true
            id: RU
            name: Русский
          - current: false
            id: EN
            name: English
      MetroCityMetro:
        value:
          id: '1'
          lines:
            - hex_color: '339999'
              id: '11'
              name: Каховская
              stations:
                - id: '11.46'
                  lat: 55.654327
                  lng: 37.647705
                  name: Каширская
                  order: 1
          name: Москва
      MetroMetro:
        value:
          - id: '1'
            lines:
              - hex_color: '339999'
                id: '11'
                name: Каховская
                stations:
                  - id: '11.46'
                    lat: 55.654327
                    lng: 37.647705
                    name: Каширская
                    order: 1
            name: Москва
            url: 'https://api.hh.ru/metro/1'
      SuggestsCompanies:
        value:
          items:
            - area:
                id: '113'
                name: Россия
              id: '1455'
              industries:
                - id: '7.541'
                  name: Интернет-компания
              logo_urls:
                '90': 'https://hh.ru/employer-logo/289055.png'
              text: HeadHunter
              url: 'http:/hh.ru'
      SuggestsEducationalInstitutions:
        value:
          items:
            - acronym: МГТУ им. Н.Э. Баумана
              area:
                id: '1'
                name: Москва
              id: '38921'
              synonyms: бывш. МВТУ им. Н.Э. Баумана
              text: 'Московский государственный технический университет им. Н.Э. Баумана, Москва'
      SuggestsFieldsOfStudy:
        value:
          items:
            - id: '382'
              text: 'Холодильная, криогенная техника и кондиционирование (Инженер)'
      SuggestsResumeSearchKeyword:
        value:
          items:
            - text: Москва
            - text: Мосты
            - text: Московская государственная юридическая академия
      SuggestsSkillSet:
        value:
          items:
            - id: '2716'
              text: Системы тепло- и холодоснабжения
            - id: '3019'
              text: Холодный цех
            - id: '3018'
              text: Холодные продажи
      SuggestsSuggestsAreas:
        value:
          items:
            - id: '1'
              text: Москва
              url: 'https://api.hh.ru/areas/1'
            - id: '2019'
              text: Московская область
              url: 'https://api.hh.ru/areas/2019'
      SuggestsSuggestsPositions:
        value:
          items:
            - id: '2569'
              professional_roles:
                - accept_incomplete_resumes: false
                  id: '70'
                  name: 'Менеджер по продажам, менеджер по работе с клиентами'
              specializations:
                - id: '17.149'
                  name: Менеджер по работе с клиентами
                  profarea_id: '17'
                  profarea_name: Закупки
              text: Менеджер по развитию бизнеса
      SuggestsVacancySearchKeyword:
        value:
          items:
            - text: Java
            - text: JavaScript
            - text: Java программист
      VacanciesDraft:
        value:
          found: 2
          items:
            - areas:
                - id: '4786'
                  name: Артышта
                - id: '4787'
                  name: Бачатский
                - id: '1231'
                  name: Белово
              auto_publication: null
              completed_fields_percentage: 100
              draft_id: '1110032'
              insufficient_publications:
                - count: 2
                  publication_type: standard
                  vacancy_type: open
              insufficient_quotas:
                - count: 1
                  publication_type: standard
                  vacancy_type: open
              last_change_time: '2021-05-18T11:20:48+03:00'
              name: Заведующий отделом розничных продаж
              publication_ready: true
              publication_type: standard
              required_publications:
                - count: 3
                  publication_type: standard
                  vacancy_type: open
              url: 'https://api.hh.ru/vacancies/drafts/1110032'
              vacancy_type: open
            - areas:
                - id: '2842'
                  name: Балыкчы
              auto_publication:
                bill_uid: 4011054/3
                cart_id: '5967030'
              completed_fields_percentage: 100
              draft_id: '1110031'
              insufficient_publications: null
              insufficient_quotas: null
              last_change_time: null
              name: Куратор
              publication_ready: true
              publication_type: standard_plus
              required_publications: null
              url: 'https://api.hh.ru/vacancies/drafts/1110031'
              vacancy_type: open
          page: 0
          pages: 1
          per_page: 20
      VacancyDraftVacancyDraftCreation:
        value:
          accept_handicapped: true
          accept_incomplete_resumes: false
          accept_kids: false
          accept_temporary: false
          address:
            id: '123'
            show_metro_only: true
          allow_messages: true
          area:
            id: '1'
          billing_type:
            id: standard
          branded_template:
            id: marketing
          code: код-1234
          contacts:
            email: i.ivanov@example.com
            name: Иванов Иван
            phones:
              - comment: с 10 до 20
                formatted: '+79198883344'
          department:
            id: '1'
            name: Спецотдел
          description: '<p>— Eh bien, mon prince. Gênes et Lucques ne sont plus que des apanages, des поместья, de la famille Buonaparte. Non, je vous préviens que si vous ne me dites pas que nous avons la guerre, si vous vous permettez encore de pallier toutes les infamies, toutes les atrocités de cet Antichrist (ma parole, j''y crois) — je ne vous connais plus, vous n''êtes plus mon ami, vous n''êtes plus мой верный раб, comme vous dites. Ну, здравствуйте, здравствуйте.</p><p><em>Je vois que je vous fais peur</em>, садитесь и рассказывайте.</p>'
          driver_license_types:
            - id: A
            - id: B
          employment:
            id: full
          experience:
            id: moreThan6
          key_skills:
            - name: Холодные продажи
            - name: Проведение промо акций
          languages:
            - id: spa
              level:
                id: b2
            - id: ita
              level:
                id: a1
          name: Менеджер по продажам
          professional_roles:
            - id: '59'
          response_letter_required: true
          response_notifications: true
          salary:
            currency: USD
            from: 100
            gross: true
            to: 500
          schedule:
            id: flyInFlyOut
          test:
            id: '42'
            required: true
          type:
            id: open
          working_days:
            - id: only_saturday_and_sunday
          working_time_intervals:
            - id: from_four_to_six_hours_in_a_day
          working_time_modes:
            - id: start_after_sixteen
      VacancyDraftVacancyDraftFull:
        value:
          accept_handicapped: false
          accept_incomplete_resumes: false
          accept_kids: false
          accept_temporary: false
          address:
            id: '4321234'
            show_metro_only: true
          allow_messages: true
          areas:
            - id: '1'
              name: Москва
              url: 'https://api.hh.ru/areas/1'
          billing_type:
            id: standard
            name: Стандарт
          code: HRR-3487
          contacts:
            email: user@example.com
            name: Имя
            phones:
              - comment: null
                formatted: +7 (919) 000-00-00
          department:
            id: HH-1455-TECH
            name: 'HeadHunter::Технический департамент'
          description: ...
          driver_license_types:
            - id: A
            - id: B
          employment:
            id: full
            name: Полная занятость
          experience:
            id: between1And3
            name: От 1 года до 3 лет
          key_skills:
            - name: Прием посетителей
            - name: Первичный документооборот
          languages:
            - id: spa
              level:
                id: b2
                name: B2 — Средне-продвинутый
              name: Испанский
            - id: ita
              level:
                id: a1
                name: A1 — Начальный
              name: Итальянский
          meta_info:
            auto_publication:
              bill_uid: 4011054/3
              cart_id: '5967030'
            completed_fields_percentage: 100
            draft_id: '1110031'
            insufficient_publications: null
            insufficient_quotas: null
            last_change_time: null
            publication_ready: true
            required_publications: null
          name: Секретарь
          professional_roles:
            - id: '96'
              name: 'Программист, разработчик'
          response_letter_required: true
          response_notifications: false
          response_url: null
          salary:
            currency: RUR
            from: 30000
            gross: true
            to: null
          schedule:
            id: fullDay
            name: Полный день
          test:
            required: false
          type:
            id: open
            name: Открытая
          working_days:
            - id: only_saturday_and_sunday
              name: Работа только по сб и вс
          working_time_intervals:
            - id: from_four_to_six_hours_in_a_day
              name: Можно работать сменами по 4-6 часов в день
          working_time_modes:
            - id: start_after_sixteen
              name: Можно начинать работать после 16-00
      VacancyDraftVacancyDraftResponse:
        value:
          id: '22'
          ignored_fields:
            - area
            - salary
            - employment
          name: Новая вакансия черновик1
          publication_ready: false
          validation_errors:
            - reason: too_short
              value: description
            - reason: too_long
              value: name
    parameters:
      HHUserAgent:
        description: |
          Название приложения и контактная почта разработчика (см. [Информация о клиенте](https://github.com/hhru/api/blob/master/docs/general.md#%D1%82%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BA-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%B0%D0%BC)).
        example: MyApp/1.0 (my-app-feedback@example.com)
        in: header
        name: HH-User-Agent
        required: true
        schema:
          type: string
      Host:
        description: |
          Доменное имя сайта (см. [Выбор сайта](https://github.com/hhru/api/blob/master/docs/hosts.md))
        example: hh.ru
        in: query
        name: host
        required: false
        schema:
          default: hh.ru
          enum:
            - hh.ru
            - grc.ua
            - rabota.by
            - hh1.az
            - hh.uz
            - hh.kz
            - headhunter.ge
            - headhunter.kg
          type: string
      Locale:
        description: |
          Идентификатор локали (см. [Локализация](https://api.hh.ru/openapi/redoc#tag/Obshie-spravochniki/paths/~1locales/get))
        example: EN
        in: query
        name: locale
        required: false
        schema:
          default: RU
          type: string
    responses:
      ErrorBadArgument:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        description: Ошибка в параметре запроса
      ErrorBadAuthorization:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        description: Ошибка авторизации пользователя
      ErrorNotFound:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorsNotFoundErrors'
        description: Не найдено или не доступно текущему пользователю
    schemas:
      AuthAppToken:
        additionalProperties: false
        properties:
          access_token:
            type: string
          token_type:
            description: Тип выданного токена. Всегда принимает значение `bearer`.
            enum:
              - bearer
            type: string
        required:
          - access_token
          - token_type
        title: Авторизация приложения
        type: object
      AuthClientCredentials:
        additionalProperties: false
        properties:
          client_id:
            description: 'Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin).'
            example: ETVQdMs2n9VKw7SMXkh9nX5H
            minLength: 1
            type: string
          client_secret:
            description: 'Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin).'
            example: 95dNjB8FmtxQsmygm6dtEy53
            minLength: 1
            type: string
          grant_type:
            description: Cпособ запроса токена
            enum:
              - client_credentials
            example: client_credentials
            type: string
        required:
          - grant_type
          - client_id
          - client_secret
        title: Параметры для получения нового токена приложения
        type: object
      AuthCode:
        additionalProperties: false
        properties:
          client_id:
            description: 'Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin).'
            example: ETVQdMs2n9VKw7SMXkh9nX5H
            minLength: 1
            type: string
          client_secret:
            description: 'Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin).'
            example: 95dNjB8FmtxQsmygm6dtEy53
            minLength: 1
            type: string
          code:
            description: |
              Значение `authorization_code`, полученное при [перенаправлении пользователя](#authorization_code).
            example: 29CtxMcaA8pRFDYyC8e8Gkm4
            minLength: 1
            type: string
          grant_type:
            description: Cпособ запроса токена
            enum:
              - authorization_code
            example: authorization_code
            type: string
          redirect_uri:
            description: |
              Uri для перенаправления пользователя после авторизации. Если не указать, используется из настроек приложения. При наличии происходит валидация значения. Вероятнее всего, потребуется сделать urlencode значения параметра.
            example: 'http://www.example.com/oauth'
            minLength: 1
            type: string
        required:
          - grant_type
          - client_id
          - client_secret
          - redirect_uri
          - code
        title: Параметры для получения токена пользователя
        type: object
      AuthInvalidClientError:
        properties:
          error:
            description: |
              Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
            enum:
              - invalid_client
            example: invalid_client
            type: string
          error_description:
            description: |
              Дополнительное описание ошибки
              * `client_id or client_secret not found` Ошибка может возникнуть в случае, если данный `client_id` не найден или был удален, передан неправильный `client_secret`
            enum:
              - client_id or client_secret not found
            example: client_id or client_secret not found
            type: string
        required:
          - error
          - error_description
        title: invalid_client
        type: object
      AuthInvalidGrantError:
        properties:
          error:
            description: |
              Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
            enum:
              - invalid_grant
            example: invalid_grant
            type: string
          error_description:
            description: |
              Дополнительное описание ошибки
              * `token has already been refreshed` Ошибка возникает при попытке воспользоваться refresh-токеном второй раз
              * `token not expired` Ошибка возникает при попытке обновить действующий access-токен. access-токен можно обновлять только после того, как он истек
              * `token was revoked` Токен был отозван. Например, токен отзывается, если время действия пароля истекло
              * `bad token ` Передано неправильное значение токена
              * `code has already been used` `authorization_code` уже был использован (его можно использовать только один раз)
              * `code expired` `authorization_code` истек
              * `code was revoke` `authorization_code` был отозван (это происходит, если время действия пароля истекло)
              * `token deactivated ` Токен был деактивирован. Токен деактивируется после того, как пользователь сменил пароль
            enum:
              - token has already been refreshed
              - token not expired
              - token was revoked
              - bad token
              - code has already been used
              - code expired
              - code was revoke
              - token deactivated
            example: account not found
            type: string
        required:
          - error
          - error_description
        title: invalid_grant
        type: object
      AuthInvalidRequestError:
        properties:
          error:
            description: |
              Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
            enum:
              - invalid_request
            example: invalid_request
            type: string
          error_description:
            description: |
              Дополнительное описание ошибки
              * `account not found` Ошибка может возникнуть, если передана неправильная пара `client_id` и `client_secret`
              * `account is locked` Пользовательский аккаунт заблокирован. Пользователь должен обратиться в службу поддержки сайта
              * `password invalidated` Пароль от пользовательского аккаунта устарел. Пользователь должен восстановить пароль на сайте `https://hh.ru`
              * `login not verified` Пользовательский аккаунт не подтвержден. Пользователь должен обратиться в службу поддержки сайта
              * `bad redirect url` передан неправильный `redirect_url`
              * `token is empty` Не передан `refresh_token`
              * `token not found` передан не правильный `refresh_token`
              * `code not found ` переданный `authorization_code` не найден
            enum:
              - account not found
              - account is locked
              - password invalidated
              - login not verified
              - bad redirect url
              - token is empty
              - token not found
              - code not found
            example: account not found
            type: string
        required:
          - error
          - error_description
        title: invalid_request
        type: object
      AuthRefreshToken:
        additionalProperties: false
        properties:
          grant_type:
            description: Cпособ запроса токена
            enum:
              - refresh_token
            example: refresh_token
            type: string
          refresh_token:
            description: 'Refresh-токен, полученный ранее при [получении пары токенов](#token) или прошлом обновлении пары.'
            example: xuLNvUSv7FYM4MPfXDP9aJWe
            minLength: 1
            type: string
        required:
          - grant_type
          - refresh_token
        title: Параметры для обновление пары access и refresh токенов
        type: object
      AuthUnsupportedGrantTypeError:
        properties:
          error:
            description: |
              Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
            enum:
              - unsupported_grant_type
            example: unsupported_grant_type
            type: string
          error_description:
            description: |
              Дополнительное описание ошибки
              * `unsupported grant_type` Возникает, если передать неправильное значение в поле `grant_type`
            enum:
              - unsupported grant_type
            example: unsupported grant_type
            type: string
        required:
          - error
          - error_description
        title: unsupported_grant_type
        type: object
      AuthUserToken:
        additionalProperties: false
        properties:
          access_token:
            type: string
          expires_in:
            description: Время жизни токена в секундах.
            format: int64
            minimum: 0
            type: integer
          refresh_token:
            description: 'Токен, который можно использовать для продления срока жизни соответствующего access токена.'
            type: string
          token_type:
            description: Тип выданного токена. Всегда принимает значение `bearer`.
            enum:
              - bearer
            type: string
        required:
          - access_token
          - token_type
          - expires_in
          - refresh_token
        title: Авторизация пользователя
        type: object
      DictionariesLangItem:
        properties:
          id:
            description: Идентификатор языка
            example: ita
            type: string
          name:
            description: Название языка
            example: Итальянский
            type: string
        required:
          - id
          - name
        title: Язык
      DictionariesLangResponse:
        items:
          $ref: '#/components/schemas/DictionariesLangItem'
        title: Список языков
        type: array
      EmployerManagerTypesAvailablePermissions:
        properties:
          id:
            description: Идентификатор права
            type: string
          name:
            description: Название права
            type: string
        required:
          - id
          - name
      EmployerManagerTypesEmployerManagerTypesItem:
        properties:
          available_permissions:
            description: 'Список прав, которые можно дать данному типу менеджера'
            items:
              $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
            type: array
          id:
            description: Идентификатор типа менеджера
            type: string
          name:
            description: Название типа менеджера
            type: string
        required:
          - id
          - name
          - available_permissions
        title: Тип и права менеджера
      EmployerManagerTypesResponse:
        properties:
          items:
            items:
              $ref: '#/components/schemas/EmployerManagerTypesEmployerManagerTypesItem'
            title: Список типов и прав менеджера
            type: array
        required:
          - items
        title: Успешный ответ
      EmployerManagersAddEmployerManager:
        properties:
          additional_phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Дополнительный телефон менеджера
          area:
            $ref: '#/components/schemas/EmployerManagersAreaId'
          email:
            description: Адрес электронной почты менеджера
            type: string
          first_name:
            description: Имя менеджера
            type: string
          is_main_contact_person:
            description: Является ли менеджер основным контактным лицом
            type: boolean
          last_name:
            description: Фамилия менеджера
            type: string
          manager_type:
            $ref: '#/components/schemas/EmployerManagersManagerTypeId'
          middle_name:
            description: Отчество менеджера
            type: string
          permissions:
            description: 'Список [прав менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
            items:
              $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
            type: array
          phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Основной телефон менеджера
          position:
            description: Должность менеджера
            type: string
        required:
          - manager_type
          - email
          - position
          - first_name
          - last_name
          - is_main_contact_person
          - phone
          - area
        title: Информация о новом менеджере
      EmployerManagersArea:
        properties:
          id:
            description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
            type: string
          name:
            description: Название региона
            type: string
          url:
            description: Ссылка на информацию о регионе
            type: string
        required:
          - id
          - name
          - url
        title: Регион
      EmployerManagersAreaId:
        properties:
          id:
            description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
            type: string
        required:
          - id
        title: Регион
      EmployerManagersEmployerManagerId:
        properties:
          id:
            description: Идентификатор менеджера
            type: string
        required:
          - id
      EmployerManagersEmployerManagerInfo:
        properties:
          additional_phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Дополнительный телефон менеджера
          area:
            $ref: '#/components/schemas/EmployerManagersArea'
          email:
            description: Адрес электронной почты менеджера
            type: string
          first_name:
            description: Имя менеджера
            type: string
          full_name:
            description: Полное имя менеджера
            type: string
          id:
            description: Идентификатор менеджера
            type: string
          is_main_contact_person:
            description: Является ли менеджер основным контактным лицом
            type: boolean
          last_name:
            description: Фамилия менеджера
            type: string
          manager_type:
            $ref: '#/components/schemas/EmployerManagersManagerType'
          middle_name:
            description: Отчество менеджера
            type: string
          name:
            deprecated: true
            description: Полное имя менеджера
            type: string
          permissions:
            description: 'Список [прав менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
            items:
              $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
            type: array
          phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Основной телефон менеджера
          position:
            description: Должность менеджера
            type: string
          vacancies_count:
            description: Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера
            nullable: true
            type: number
        required:
          - id
          - email
          - position
          - first_name
          - last_name
          - is_main_contact_person
          - phone
          - permissions
        title: Информация о менеджере
      EmployerManagersEmployerManagerItem:
        properties:
          additional_phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Дополнительный телефон менеджера
          area:
            $ref: '#/components/schemas/EmployerManagersArea'
          email:
            description: Адрес электронной почты менеджера
            type: string
          first_name:
            description: Имя менеджера
            type: string
          full_name:
            description: Полное имя менеджера
            type: string
          id:
            description: Идентификатор менеджера
            type: string
          is_main_contact_person:
            description: Является ли менеджер основным контактным лицом
            type: boolean
          last_name:
            description: Фамилия менеджера
            type: string
          middle_name:
            description: Отчество менеджера
            type: string
          name:
            deprecated: true
            description: Полное имя менеджера
            type: string
          phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Основной телефон менеджера
          position:
            description: Должность менеджера
            type: string
          vacancies_count:
            description: Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера
            nullable: true
            type: number
        required:
          - id
          - email
          - position
          - area
        title: Менеджер
      EmployerManagersEmployerManagerLimits:
        properties:
          left:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersResumeView'
              - type: object
            description: 'Количество оставшихся просмотров резюме. В этом параметре содержится лимит просмотров на компанию. Из-за этого он может быть меньше, чем доступно текущему пользователю'
          limits:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersResumeView'
              - type: object
            description: Лимит на просмотр резюме
          spend:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersResumeView'
              - type: object
            description: Количество просмотренных резюме
        required:
          - limits
          - spend
          - left
        title: Дневной лимит просмотра резюме
      EmployerManagersManagerData:
        properties:
          additional_phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Дополнительный телефон менеджера
          permissions:
            description: 'Список прав, которые можно дать данному типу менеджера'
            items:
              $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
            type: array
          phone:
            allOf:
              - $ref: '#/components/schemas/EmployerManagersPhone'
              - type: object
            description: Основной телефон менеджера
          position:
            title: Должность менеджера
            type: string
        title: JSON c редактируемыми параметрами менеджера
      EmployerManagersManagerType:
        properties:
          id:
            description: Идентификатор типа менеджера
            type: string
          name:
            description: Название типа менеджера
            type: string
        required:
          - id
          - name
        title: Тип менеджера
      EmployerManagersManagerTypeId:
        properties:
          id:
            description: 'Идентификатор [типа менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
            type: string
        required:
          - id
        title: Тип менеджера
      EmployerManagersPhone:
        properties:
          city:
            description: Код города
            type: string
          comment:
            description: Комментарий
            type: string
          country:
            description: Код страны
            type: string
          number:
            description: Номер
            type: string
        required:
          - country
          - city
          - number
      EmployerManagersResponse:
        properties:
          found:
            title: Найдено результатов
            type: number
          items:
            items:
              $ref: '#/components/schemas/EmployerManagersEmployerManagerItem'
            minItems: 0
            title: Список менеджеров работодателя
            type: array
          page:
            title: Номер страницы
            type: number
          pages:
            title: Всего страниц
            type: number
          per_page:
            title: Результатов на странице
            type: number
        required:
          - items
          - found
          - page
          - pages
          - per_page
        title: Успешный ответ
      EmployerManagersResumeView:
        properties:
          resume_view:
            description: Просмотры резюме
            type: integer
        required:
          - resume_view
      EmployerServicesBalance:
        properties:
          actual:
            description: Текущее значение баланса
            type: integer
          initial:
            description: Значение баланса на момент активации услуги
            type: integer
        required:
          - actual
          - initial
      EmployerServicesEmployerServiceItem:
        properties:
          activated_at:
            description: 'Время активации услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
            format: date-time
            type: string
          balance:
            $ref: '#/components/schemas/EmployerServicesBalance'
            description: Значения баланса. Только для пакетных услуг
            nullable: true
          expires_at:
            description: 'Время истечения услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
            format: date-time
            type: string
          id:
            description: Идентификатор услуги
            type: string
          service_type:
            $ref: '#/components/schemas/EmployerServicesServiceType'
            description: Тип услуги
        required:
          - id
          - service_type
          - activated_at
          - expires_at
        title: Услуга
      EmployerServicesEmployerServices:
        properties:
          items:
            items:
              $ref: '#/components/schemas/EmployerServicesEmployerServiceItem'
            minItems: 0
            title: Перечень услуг
            type: array
        required:
          - items
      EmployerServicesServiceType:
        properties:
          id:
            description: Идентификатор типа услуги
            type: string
          name:
            description: Локализованное название типа услуги
            type: string
        required:
          - id
          - name
      EmployersEmployerInfo:
        properties:
          alternate_url:
            description: Ссылка на описание работодателя на сайте
            type: string
          area:
            allOf:
              - $ref: '#/components/schemas/_IncludesArea'
              - type: object
            description: Информация о регионе работодателя
          branded_description:
            description: |
              Строка с кодом HTML (возможно наличие `<script/>` и `<style/>`), которая является альтернативой стандартному описанию работодателя. HTML адаптирован для мобильных устройств и корректно отображается без поддержки Javascript. 

              При этом:

              - Контент тянется по ширине на 100% ширины контейнера и умещается без прокрутки в 300px.
              - Контент рассчитан на то, что он будет вставлен в обвязку, в которую входит название, логотип, сайт и ссылка на вакансии работодателя.
              - Изображения, которые могут встретиться в таком описании, адаптированы под retina-дисплеи.
              - Размер шрифта не меньше 12px, размер межстрочного интервала не меньше 16px.

              Значение может быть `null`, если у работодателя отсутствует индивидуальное описание
            nullable: true
            type: string
          description:
            description: Описание работодателя в виде строки с кодом HTML (без `<script/>` и `<style/>`)
            nullable: true
            type: string
          id:
            description: Идентификатор работодателя
            type: string
          industries:
            description: 'Список отраслей работодателя. Элементы [справочника индустрий](https://github.com/hhru/api/blob/master/docs/industries.md)'
            items:
              $ref: '#/components/schemas/SuggestsIndustries'
            type: array
          insider_interviews:
            description: Список интервью
            items:
              $ref: '#/components/schemas/EmployersInsiderInterviews'
            minItems: 0
            type: array
          logo_urls:
            allOf:
              - $ref: '#/components/schemas/_IncludesLogoUrls'
              - type: object
            description: 'Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`)'
            nullable: true
          name:
            description: Название работодателя
            type: string
          open_vacancies:
            description: Количество открытых вакансий у работодателя
            type: number
          relations:
            description: 'Если работодатель добавлен в черный список, то вернется `[''blacklisted'']`, иначе `[]`'
            items:
              enum:
                - blacklisted
                - null
              nullable: true
              type: string
            type: array
          site_url:
            description: Адрес сайта работодателя
            type: string
          trusted:
            description: 'Флаг, показывающий, прошел ли работодатель [проверку на сайте](https://feedback.hh.ru/article/details/id/5951)'
            type: boolean
          type:
            description: 'Тип работодателя (прямой работодатель, кадровое агентство и т.п.). Возможные значения описаны в [справочнике](https://github.com/hhru/api/blob/master/docs/dictionaries.md) в поле `employer_type`. Возвращает `null`, если тип работодателя скрыт'
            nullable: true
            type: string
          vacancies_url:
            description: URL для получения поисковой выдачи с вакансиями данного работодателя
            type: string
        required:
          - name
          - id
          - site_url
          - vacancies_url
          - open_vacancies
          - trusted
          - alternate_url
          - insider_interviews
          - area
          - relations
          - industries
        title: Работодатель
      EmployersEmployerItem:
        properties:
          alternate_url:
            description: Ссылка на описание работодателя на сайте
            type: string
          id:
            description: Идентификатор работодателя
            type: string
          logo_urls:
            allOf:
              - $ref: '#/components/schemas/_IncludesLogoUrls'
              - type: object
            description: 'Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`)'
            nullable: true
          name:
            description: Название работодателя
            type: string
          open_vacancies:
            description: Количество открытых вакансий у работодателя
            type: number
          url:
            description: URL для получения полного описания работодателя
            type: string
          vacancies_url:
            description: URL для получения поисковой выдачи с вакансиями данного работодателя
            type: string
        required:
          - id
          - name
          - url
          - alternate_url
          - vacancies_url
          - open_vacancies
        title: Работодатель
      EmployersEmployersList:
        properties:
          found:
            description: Найдено результатов
            type: number
          items:
            description: Найденные работодатели
            items:
              $ref: '#/components/schemas/EmployersEmployerItem'
            minItems: 0
            type: array
          page:
            description: Номер страницы
            type: number
          pages:
            description: Всего страниц
            type: number
          per_page:
            description: Результатов на странице
            type: number
        required:
          - items
          - found
          - page
          - pages
          - per_page
        title: Успешный ответ
      EmployersInsiderInterviews:
        properties:
          id:
            description: Идентификатор интервью
            type: string
          title:
            description: Заголовок интервью
            type: string
          url:
            description: 'Адрес страницы, содержащей интервью'
            type: string
        required:
          - url
          - id
          - title
        title: Интервью
        type: object
      ErrorsBadArgumentEmployerManagerError:
        additionalProperties: false
        properties:
          reason:
            description: Описание ошибки
            example: too_long_value
            type: string
          type:
            description: Текстовый идентификатор типа ошибки
            enum:
              - bad_argument
              - bad_request
              - managers
            example: bad_argument
            type: string
          value:
            description: Название поля с ошибкой
            example: resume_id
            type: string
        required:
          - type
        title: Ошибка в параметре запроса
        type: object
      ErrorsBadArgumentEmployerManagerErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Ошибки в параметрах запроса
      ErrorsBadArgumentError:
        additionalProperties: false
        properties:
          reason:
            description: Описание ошибки
            example: too_long_value
            type: string
          type:
            description: Текстовый идентификатор типа ошибки
            enum:
              - bad_argument
            example: bad_argument
            type: string
          value:
            description: |
              Название поля с ошибкой.
            example: resume_id
            type: string
        required:
          - type
        title: Ошибка в параметре запроса
        type: object
      ErrorsBadArgumentErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadArgumentError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Ошибки в параметрах запроса
      ErrorsBadAuthorizationEmployerManagerError:
        additionalProperties: false
        properties:
          allowed_accounts:
            description: |
              Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.
              Актуально только в случае авторизации работодателя.
            items:
              $ref: '#/components/schemas/ManagerAccount'
            minItems: 1
            type: array
          reason:
            description: |
              Ошибки при создании или редактировании менеджера работодателя:
                * `already_exist` — Менеджер с такой почтой уже существует
                * `creation_limit_exceeded` — Достигнут лимит на создание менеджеров
                * `not_editable` — Поле *field_name* недоступно для редактирования
            enum:
              - already_exist
              - creation_limit_exceeded
              - not_editable
            example: already_exist
            type: string
          type:
            description: Текстовый идентификатор типа ошибки
            enum:
              - forbidden
              - oauth
              - manager_extra_accounts
              - manager_accounts
              - managers
            example: oauth
            type: string
          value:
            description: |
              Общие ошибки:
                * `bad_authorization` — Токен авторизации не существует или не валидный
                * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](https://github.com/hhru/api/blob/master/docs/authorization.md#refresh_token)
                * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](https://github.com/hhru/api/blob/master/docs/authorization.md)
                * `application_not_found` — Ваше приложение было удалено
                * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)
                * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта
                * `email` — Менеджер с такой почтой уже существует
                * `user_auth_expected` — Ожидается авторизация пользователя, передана авторизация приложения
            enum:
              - bad_authorization
              - token_expired
              - token_revoked
              - application_not_found
              - manager_extra_account_not_found
              - used_manager_account_forbidden
              - email
              - user_auth_expected
            example: bad_authorization
            type: string
        required:
          - type
        title: Ошибка
        type: object
      ErrorsBadAuthorizationEmployerManagerErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              description:
                description: Описание ошибки
                example: Forbidden
                type: string
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Плохая авторизация
      ErrorsBadAuthorizationError:
        additionalProperties: false
        properties:
          allowed_accounts:
            description: |
              Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.
              Актуально только в случае авторизации работодателя.
            items:
              $ref: '#/components/schemas/ManagerAccount'
            minItems: 1
            type: array
          type:
            description: Текстовый идентификатор типа ошибки
            enum:
              - forbidden
              - oauth
              - manager_extra_accounts
              - manager_accounts
            example: oauth
            type: string
          value:
            description: |
              Общие ошибки:
                * `bad_authorization` — Токен авторизации не существует или не валидный
                * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](https://github.com/hhru/api/blob/master/docs/authorization.md#refresh_token)
                * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](https://github.com/hhru/api/blob/master/docs/authorization.md)
                * `application_not_found` — Ваше приложение было удалено
                * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)
                * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта
                * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](https://github.com/hhru/api/blob/master/docs/authorization_for_user.md)
                * `application_auth_expected` — Передана авторизация пользователя, метод требует [авторизации приложения](https://github.com/hhru/api/blob/master/docs/authorization_for_application.md)
            enum:
              - bad_authorization
              - token_expired
              - token_revoked
              - application_not_found
              - manager_extra_account_not_found
              - used_manager_account_forbidden
              - user_auth_expected
              - application_auth_expected
            example: bad_authorization
            type: string
        required:
          - type
        title: Ошибка авторизации пользователя
        type: object
      ErrorsBadAuthorizationErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              description:
                description: Описание ошибки
                example: Forbidden
                type: string
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Ошибки авторизации пользователя
      ErrorsBadJsonDataError:
        additionalProperties: false
        properties:
          pointer:
            description: 'Путь до параметра, в котором ошибка'
            example: /url
            type: string
          reason:
            description: |
              Причина ошибки. Возможные значения:
                * `required` - отсутствует обязательное поле
                * `invalid` - значение введено не корректно
                * `size_less_than_min` - пустой массив
            enum:
              - required
              - invalid
              - size_less_than_min
            example: required
            type: string
          type:
            description: Текстовый идентификатор типа ошибки
            example: bad_json_data
            type: string
          value:
            description: Название поля с ошибкой
            example: employer_id
            type: string
        required:
          - type
        title: Общая ошибка
        type: object
      ErrorsBadJsonDataErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadJsonDataError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Невалидный json
      ErrorsBadJsonError:
        additionalProperties: false
        properties:
          type:
            description: Текстовый идентификатор типа ошибки
            enum:
              - bad_json_data
            example: bad_json_data
            type: string
        required:
          - type
        title: Общая ошибка
        type: object
      ErrorsBadJsonErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsBadJsonError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Переданный формат не json
      ErrorsDraftError:
        additionalProperties: false
        properties:
          type:
            description: Текстовый идентификатор типа ошибки.
            enum:
              - vacancy
            example: vacancy
            type: string
          value:
            description: Значение ошибки
            enum:
              - vacancy_draft_limit_exceeded
            example: vacancy_draft_limit_exceeded
            type: string
        required:
          - type
          - value
        title: Ошибка.
        type: object
      ErrorsErrorRequestId:
        description: В теле выдается request_id для упрощения решения проблем при обращении в поддержку hh.ru (api@hh.ru).
        properties:
          request_id:
            description: Идентификатор запроса
            example: q1ww2e2r4ty
            type: string
        required:
          - request_id
        type: object
      ErrorsNotFoundError:
        additionalProperties: false
        properties:
          type:
            description: Текстовый идентификатор типа ошибки.
            enum:
              - not_found
            example: not_found
            type: string
        required:
          - type
        title: Ошибка.
        type: object
      ErrorsNotFoundErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок.
                items:
                  $ref: '#/components/schemas/ErrorsNotFoundError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках.
        title: Не найдено.
      ErrorsVacancyError:
        additionalProperties: false
        properties:
          found:
            description: Количество найденных дублей вакансии
            type: number
          items:
            description: Массив идентификаторов вакансий - дублей
            items:
              nullable: false
              properties:
                id:
                  description: Идентификатор вакансии
                  example: 78789890
                  type: number
              required:
                - id
              type: object
            minItems: 1
            type: array
          reason:
            description: Причина ошибки
            example: is_empty
            type: string
          type:
            description: Тип ошибки
            example: bad_json_data
            type: string
          value:
            description: Наименование поля с ошибкой
            example: specializations
            type: string
        required:
          - type
          - value
        title: Ошибка
        type: object
      ErrorsVacancyErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                description: Массив с данными ошибок
                items:
                  $ref: '#/components/schemas/ErrorsVacancyError'
                minItems: 1
                type: array
            required:
              - errors
            type: object
        description: Информация о возникших ошибках
        title: Oшибки
      Id:
        description: Информация о созданном объекте
        nullable: false
        properties:
          id:
            description: Идентификатор созданного объекта
            example: '22'
            type: string
        required:
          - id
        type: object
      LocalesLocaleItem:
        properties:
          current:
            description: '`true` для текущей локали, `false` для остальных'
            type: boolean
          id:
            description: Идентификатор локали
            type: string
          name:
            description: Имя локали
            type: string
        required:
          - id
          - name
          - current
        title: Локаль
      LocalesResponse:
        items:
          $ref: '#/components/schemas/LocalesLocaleItem'
        title: Список доступных локалей
        type: array
      ManagerAccount:
        additionalProperties: false
        description: Информация о рабочем аккаунте менеджера
        properties:
          employer:
            $ref: '#/components/schemas/ManagerAccountCompany'
          id:
            description: Идентификатор рабочего аккаунта менеджера
            example: '12345678'
            type: string
        required:
          - id
          - employer
        title: Рабочий аккаунт менеджера
        type: object
      ManagerAccountCompany:
        additionalProperties: false
        description: 'Информация о компании, к которой прикреплен рабочий аккаунт менеджера'
        properties:
          id:
            description: Идентификатор компании
            example: '1455'
            type: string
          name:
            description: Название компании
            example: HeadHunter
            type: string
        required:
          - id
          - name
        type: object
      ManagerAccounts:
        additionalProperties: false
        description: Информация о рабочих аккаунтах менеджера
        properties:
          current_account_id:
            description: |
              Идентификатор текущего рабочего аккаунта менеджера. Совпадает со значением переданного в заголовке `X-Manager-Account-Id`.
            example: '87654321'
            type: string
          is_primary_account_blocked:
            description: Заблокирован ли главный рабочий аккаунт менеджера
            example: false
            type: boolean
          items:
            description: Список рабочих аккаунтов менеджера
            items:
              $ref: '#/components/schemas/ManagerAccount'
            minItems: 0
            type: array
          primary_account_id:
            description: Идентификатор главного рабочего аккаунта менеджера
            example: '12345678'
            type: string
        required:
          - items
          - current_account_id
          - primary_account_id
          - is_primary_account_blocked
        title: Рабочие аккаунты менеджера
        type: object
      ManagerSettings:
        additionalProperties: false
        description: Информация о предпочтениях менеджера
        properties:
          default_currency:
            $ref: '#/components/schemas/ManagerSettingsCurrency'
          default_vacancy_branded_template:
            $ref: '#/components/schemas/VacancyBrandedTemplate'
          use_sms_notification:
            description: |
              Предпочтение по использованию флага `send_sms`
              при [приглашении соискателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#add-invite).
            example: true
            type: boolean
        required:
          - default_currency
          - use_sms_notification
        title: Предпочтения менеджера
        type: object
      ManagerSettingsCurrency:
        additionalProperties: false
        description: |
          Предпочитаемая валюта при [публикации вакансии](https://github.com/hhru/api/blob/master/docs/employer_vacancies.md#creation).
        properties:
          abbr:
            description: Краткое обозначение валюты
            example: руб.
            type: string
          code:
            description: Код валюты
            example: RUR
            type: string
          name:
            description: Название валюты
            example: Рубли
            type: string
        required:
          - code
          - name
          - abbr
        type: object
      MeAnyProfile:
        description: |
          Содержит флаги, актуальные для любого типа авторизации: соискатель, работодатель, приложение.
        discriminator:
          mapping:
            applicant: '#/components/schemas/MeApplicantProfile'
            application: '#/components/schemas/MeAnyProfile'
            employer: '#/components/schemas/MeEmployerProfile'
          propertyName: auth_type
        properties:
          auth_type:
            description: Тип авторизации
            example: applicant
            type: string
          is_admin:
            description: Является ли текущий пользователь администратором сайта
            example: false
            type: boolean
          is_applicant:
            description: Является ли текущий пользователь соискателем
            example: false
            type: boolean
          is_application:
            description: Является ли авторизованный клиент приложением
            example: false
            type: boolean
          is_employer:
            description: Является ли текущий пользователь работодателем
            example: false
            type: boolean
        required:
          - is_application
          - is_applicant
          - is_employer
          - is_admin
          - auth_type
        title: Флаги профиля
        type: object
      MeAnyUserProfile:
        allOf:
          - $ref: '#/components/schemas/MeAnyProfile'
          - additionalProperties: true
            properties:
              email:
                description: Email текущего пользователя
                example: ivanov@example.com
                format: email
                nullable: true
                type: string
              first_name:
                description: Имя текущего пользователя
                example: Александр
                type: string
              id:
                description: Идентификатор текущего пользователя
                example: '12345678'
                type: string
              is_anonymous:
                deprecated: true
                type: boolean
              last_name:
                description: Фамилия текущего пользователя
                example: Иванов
                type: string
              mid_name:
                deprecated: true
                example: Николаевич
                type: string
              middle_name:
                description: Отчество текущего пользователя
                example: Петрович
                nullable: true
                type: string
              phone:
                description: Телефон текущего пользователя
                example: '79164555555'
                format: phone
                nullable: true
                type: string
            required:
              - id
              - first_name
              - last_name
            type: object
        description: 'Базовый профиль текущего пользователя, авторизованного как соискатель или работодатель.'
        title: Базовый профиль
      MeApplicantProfile:
        allOf:
          - $ref: '#/components/schemas/MeAnyUserProfile'
          - additionalProperties: true
            properties:
              counters:
                $ref: '#/components/schemas/MeApplicantProfileCounters'
              employer:
                deprecated: true
                nullable: true
              is_in_search:
                description: Имеет ли текущий пользователь статус "ищу работу"
                example: false
                type: boolean
              manager:
                deprecated: true
                nullable: true
              negotiations_url:
                description: |
                  URL, на который нужно сделать GET-запрос, чтобы получить список откликов/приглашений текущего пользователя.
                format: uri
                type: string
              personal_manager:
                deprecated: true
                nullable: true
              resumes_url:
                description: |
                  URL, на который нужно сделать GET-запрос, чтобы получить список резюме текущего пользователя.
                example: 'https://api.hh.ru/resumes/mine'
                format: uri
                type: string
              user_statuses:
                $ref: '#/components/schemas/UserStatusesApplicant'
            required:
              - counters
              - resumes_url
              - negotiations_url
              - is_in_search
            type: object
        description: 'Профиль текущего пользователя, авторизованного как соискатель.'
        title: Профиль соискателя
      MeApplicantProfileCounters:
        description: Информация о счетчиках соискателя
        properties:
          new_resume_views:
            description: Общее количество новых просмотров всех резюме текущего пользователя.
            example: 2
            minimum: 0
            type: integer
          resumes_count:
            description: Общее количество созданных резюме текущего пользователя.
            example: 5
            minimum: 0
            type: integer
          unread_negotiations:
            description: 'Количество новых непрочитанных откликов (у которых `has_updates: true`).'
            example: 1
            minimum: 0
            type: integer
        required:
          - unread_negotiations
          - new_resume_views
          - resumes_count
        type: object
      MeChangeName:
        properties:
          first_name:
            description: Имя
            example: Иван
            minLength: 1
            type: string
          last_name:
            description: Фамилия
            example: Иванов
            minLength: 1
            type: string
          middle_name:
            description: 'Отчество, поле может быть пустым'
            example: Иванович
            minLength: 0
            type: string
        required:
          - last_name
          - first_name
          - middle_name
        type: object
      MeEmployerProfile:
        allOf:
          - $ref: '#/components/schemas/MeAnyUserProfile'
          - additionalProperties: true
            properties:
              employer:
                $ref: '#/components/schemas/MeEmployerProfileCompany'
              is_in_search:
                deprecated: true
                nullable: true
              manager:
                $ref: '#/components/schemas/MeEmployerProfileManager'
              negotiations_url:
                deprecated: true
                nullable: true
              personal_manager:
                $ref: '#/components/schemas/MeEmployerProfilePersonalManager'
              resumes_url:
                deprecated: true
                nullable: true
            type: object
        description: 'Профиль текущего пользователя, авторизованного как работодатель.'
        title: Профиль работодателя
      MeEmployerProfileCompany:
        description: Информация о компании работодателя
        properties:
          id:
            description: Идентификатор компании
            example: '1455'
            type: string
          manager_id:
            description: Идентификатор персонального менеджера
            example: '4062820'
            type: string
          name:
            description: Название компании
            example: HeadHunter
            type: string
        required:
          - id
          - manager_id
          - name
        type: object
      MeEmployerProfileManager:
        description: 'Информация о пользователе, как о менеджере компании.'
        properties:
          has_admin_rights:
            description: Обладает ли текущий менеджер правами администратора
            example: true
            type: boolean
          has_multiple_manager_accounts:
            description: 'Существует ли у пользователя несколько [рабочих аккаунтов](manager_accounts.md)'
            example: true
            type: boolean
          id:
            description: Идентификатор менеджера
            example: '87654321'
            type: string
          is_main_contact_person:
            description: Является ли текущий менеджер главным контактным лицом компании
            example: true
            type: boolean
          manager_settings_url:
            description: 'URL, на который нужно сделать GET запрос, чтобы получить [предпочтения менеджера](manager_settings.md)'
            example: 'https://api.hh.ru/employers/1455/managers/87654321/settings'
            format: uri
            type: string
        required:
          - id
          - has_admin_rights
          - has_multiple_manager_accounts
          - is_main_contact_person
          - manager_settings_url
        title: Информация о менеджере компании
        type: object
      MeEmployerProfilePersonalManager:
        description: Информация о персональном менеджере для работодателя
        properties:
          email:
            description: email персонального менеджера
            example: smirnov@example.com
            format: email
            type: string
          first_name:
            description: Имя персонального менеджера
            example: Николай
            type: string
          id:
            description: Идентификатор персонального менеджера
            example: '1234567'
            type: string
          is_available:
            description: Доступен ли менеджер в данный момент
            example: false
            type: boolean
          last_name:
            description: Фамилия персонального менеджера
            example: Смирнов
            type: string
          photo_urls:
            additionalProperties: false
            description: Объект с фотографиями менеджера
            nullable: true
            properties:
              big:
                description: URL большой фотографии менеджера
                example: 'https://hhcdn.ru/file/big.jpg'
                format: uri
                nullable: true
                type: string
              small:
                description: URL маленькой фотографии менеджера
                example: 'https://hhcdn.ru/file/small.jpg'
                format: uri
                nullable: true
                type: string
            type: object
          unavailable:
            additionalProperties: false
            description: 'Информация об отсутствии менеджера, либо `null`, если менеджер доступен.'
            nullable: true
            properties:
              until:
                description: 'Время, до которого менеджер недоступен для контакта'
                example: '2016-07-01T08:00:00+0400'
                format: dateTime
                type: string
            type: object
        required:
          - id
          - first_name
          - last_name
          - email
          - is_available
        type: object
      MeProfile:
        description: Информация о текущем авторизованном пользователе
        discriminator:
          mapping:
            applicant: '#/components/schemas/MeApplicantProfile'
            application: '#/components/schemas/MeAnyProfile'
            employer: '#/components/schemas/MeEmployerProfile'
          propertyName: auth_type
        oneOf:
          - $ref: '#/components/schemas/MeAnyProfile'
          - $ref: '#/components/schemas/MeApplicantProfile'
          - $ref: '#/components/schemas/MeEmployerProfile'
      MeSetInSearch:
        properties:
          is_in_search:
            description: 'Флаг «ищу работу». Возможные значения: `true`/`false`'
            example: 'true'
            type: string
        required:
          - is_in_search
        type: object
      MetroCityMetroItem:
        properties:
          id:
            description: Идентификатор города
            type: string
          lines:
            description: Список линий метро в городе
            items:
              $ref: '#/components/schemas/MetroMetroLine'
            type: array
          name:
            description: Название города
            type: string
        required:
          - id
          - name
          - lines
        title: Город
      MetroLineStation:
        properties:
          id:
            description: Идентификатор станции
            type: string
          lat:
            description: Широта расположения станции
            type: number
          lng:
            description: Долгота расположения станции
            type: number
          name:
            description: Название станции
            type: string
          order:
            description: 'Порядковый номер станции на линии, начиная с 0'
            type: integer
        required:
          - id
          - name
          - lat
          - lng
          - order
        title: Станция метро
      MetroMetroItem:
        properties:
          id:
            description: Идентификатор города
            type: string
          lines:
            description: Список линий метро в городе
            items:
              $ref: '#/components/schemas/MetroMetroLine'
            type: array
          name:
            description: Название города
            type: string
          url:
            description: URL запроса
            type: string
        required:
          - id
          - url
          - name
          - lines
        title: Город
      MetroMetroLine:
        properties:
          hex_color:
            description: Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)
            pattern: '^[0-9A-Fa-f]{6}$'
            type: string
          id:
            description: Идентификатор линии
            type: string
          name:
            description: Название линии
            type: string
          stations:
            description: Список станций метро на линии
            items:
              $ref: '#/components/schemas/MetroLineStation'
            type: array
        required:
          - hex_color
          - id
          - name
          - stations
        title: Линия метро
      MetroMetroResponse:
        items:
          $ref: '#/components/schemas/MetroMetroItem'
        title: Список всех станций метро во всех городах
        type: array
      ProfessionalRolesCatalog:
        additionalProperties: false
        description: Каталог профессиональных ролей и категорий
        properties:
          categories:
            description: Информация о категории профессиональной роли
            items:
              $ref: '#/components/schemas/ProfessionalRolesCategory'
            minItems: 1
            title: Категория профессиональной роли
            type: array
        required:
          - categories
        title: Каталог профессиональных ролей
        type: object
      ProfessionalRolesCategory:
        properties:
          id:
            description: Идентификатор категории профессиональной роли
            example: '123'
            minLength: 1
            type: string
          name:
            description: Имя категории профессиональной роли
            example: 'Строительство, недвижимость'
            minLength: 1
            type: string
          roles:
            description: |
              Список профессиональных ролей, входящих в эту категорию
            items:
              $ref: '#/components/schemas/ProfessionalRolesRole'
            minItems: 1
            type: array
        required:
          - id
          - name
          - roles
        type: object
      ProfessionalRolesRole:
        properties:
          accept_incomplete_resumes:
            description: На роль принимаются отклики неполным резюме
            example: true
            type: boolean
          id:
            description: Идентификатор профессиональной роли
            example: '1'
            minLength: 1
            type: string
          is_default:
            description: Дефолтная роль
            example: true
            type: boolean
          name:
            description: Имя профессиональной роли
            example: Архитектор
            minLength: 1
            type: string
        required:
          - id
          - name
          - accept_incomplete_resumes
          - is_default
        type: object
      ResumePhoneGenerateCodeGenerateCode:
        properties:
          can_request_code_again_in:
            description: Ближайшая возможная повторная отправка кода в секундах
            example: 15
            type: string
          notification_type:
            description: Тип сгенерированного сообщения
            example: sms
            type: string
        title: Сгенерированный код
        type: object
      ResumeShouldSendSmsPhone:
        description: Информация о телефоне соискателя
        properties:
          city:
            description: Префикс города номера телефона
            example: 929
            type: string
          country:
            description: Префикс страны номера телефона
            example: 7
            type: string
          formatted:
            description: Номер телефона отформатированный
            example: +7 (929) 667-21-67
            type: string
          need_verification:
            description: Нужно ли верифицировать номер телефона
            example: false
            type: boolean
          number:
            description: Номер телефона без префиксов
            example: 6672167
            type: string
          restricted_country:
            description: Находится ли номер телефона в черном списке по отправке смс
            example: false
            type: boolean
          verified:
            description: Верифицирован ли номер телефона пользователем
            example: true
            type: boolean
        required:
          - country
          - city
          - number
          - formatted
          - verified
          - need_verification
          - restricted_country
        type: object
      SuggestsArea:
        properties:
          id:
            description: Идентификатор региона
            type: string
          name:
            description: Название региона
            type: string
        required:
          - id
          - name
        title: Регион
      SuggestsAreas:
        additionalProperties: false
        description: Подсказки по регионам
        properties:
          items:
            description: Информация о найденных регионах
            items:
              $ref: '#/components/schemas/SuggestsAreasItem'
            title: Массив регионов
            type: array
        required:
          - items
        title: Подсказки по регионам
        type: object
      SuggestsAreasItem:
        properties:
          id:
            description: Идентификатор региона
            type: string
          text:
            description: Название региона
            type: string
          url:
            description: URL региона
            type: string
        required:
          - id
          - text
          - url
        type: object
      SuggestsCompanies:
        additionalProperties: false
        description: Подсказки по организациям
        properties:
          items:
            description: Информация о найденных организациях
            items:
              $ref: '#/components/schemas/SuggestsCompanyItem'
            title: Массив найденных организаций
            type: array
        required:
          - items
        title: Подсказки по организациям
        type: object
      SuggestsCompanyItem:
        allOf:
          - $ref: '#/components/schemas/SuggestsEmployerItem'
          - properties:
              area:
                $ref: '#/components/schemas/SuggestsArea'
              industries:
                description: Сферы деятельности
                items:
                  $ref: '#/components/schemas/SuggestsIndustries'
                type: array
            required:
              - area
            type: object
        type: object
      SuggestsEducationalInstitutionItem:
        properties:
          acronym:
            description: Сокращенное название университета
            nullable: true
            type: string
          area:
            $ref: '#/components/schemas/SuggestsArea'
            description: Регион
            type: object
          id:
            description: Идентификатор университета
            type: string
          synonyms:
            description: Альтернативное название университета
            nullable: true
            type: string
          text:
            description: Полное название университета
            type: string
        required:
          - id
          - text
          - area
        type: object
      SuggestsEducationalInstitutions:
        additionalProperties: false
        description: Подсказки по названиям университетов
        properties:
          items:
            description: Информация о найденных университетах
            items:
              $ref: '#/components/schemas/SuggestsEducationalInstitutionItem'
            title: Массив найденных университетов
            type: array
        required:
          - items
        title: Подсказки по названиям университетов
        type: object
      SuggestsEmployerItem:
        properties:
          id:
            description: Идентификатор организации
            type: string
          logo_urls:
            $ref: '#/components/schemas/SuggestsLogoUrl'
            description: Ссылка на логотип организации
            type: object
          text:
            description: Название организации
            type: string
          url:
            description: Сайт организации
            type: string
        required:
          - id
          - text
      SuggestsErrors:
        allOf:
          - $ref: '#/components/schemas/ErrorsErrorRequestId'
          - properties:
              errors:
                items:
                  properties:
                    type:
                      enum:
                        - bad_argument
                      type: string
                    value:
                      description: |
                        Описание ошибки:
                          * locale — указан неподдерживаемый язык;
                          * text — искомый текст должен быть длиной от двух до 30000 символов
                      enum:
                        - locale
                        - text
                      type: string
                  type: object
                type: array
            required:
              - errors
            type: object
        title: Ошибка
      SuggestsFieldsOfStudy:
        additionalProperties: false
        description: Подсказки по специализациям
        properties:
          items:
            description: Информация о найденных специализациях
            items:
              $ref: '#/components/schemas/SuggestsFieldsOfStudyItem'
            title: Массив специализаций
            type: array
        required:
          - items
        title: Подсказки по специализациям
        type: object
      SuggestsFieldsOfStudyItem:
        properties:
          id:
            description: Идентификатор специализации
            type: string
          text:
            description: Название специализации
            type: string
        required:
          - id
          - text
        type: object
      SuggestsIndustries:
        properties:
          id:
            description: Идентификатор сферы деятельности
            type: string
          name:
            description: Название сферы деятельности
            type: string
        required:
          - id
          - name
        title: Сфера деятельности
        type: object
      SuggestsLogoUrl:
        properties:
          '90':
            description: URL логотипа
            type: string
        required:
          - '90'
        title: Ссылка на логотип
      SuggestsPositionItem:
        properties:
          id:
            description: Идентификатор должности
            example: '2063'
            type: string
          professional_roles:
            description: 'Информация о профессиональных ролях, соответствующих должности'
            items:
              $ref: '#/components/schemas/SuggestsProfessionalRoleItemWithName'
            minItems: 1
            title: 'Массив профессиональных ролей, соответствующих должности'
            type: array
          specializations:
            description: 'Информация о специализациях, соответствующих должности'
            items:
              $ref: '#/components/schemas/SuggestsSpecializationsWithName'
            minItems: 1
            title: 'Массив специализаций, соответствующих должности'
            type: array
          text:
            description: Название должности
            example: Личный водитель
            type: string
        required:
          - id
          - text
          - professional_roles
          - specializations
        type: object
      SuggestsPositions:
        additionalProperties: false
        description: Подсказки по должностям
        properties:
          items:
            description: Информация о найденных должностях
            items:
              $ref: '#/components/schemas/SuggestsPositionItem'
            title: Массив найденных должностей
            type: array
        required:
          - items
        title: Подсказки по должностям резюме
        type: object
      SuggestsProfessionalRoleItem:
        properties:
          accept_incomplete_resumes:
            description: 'Профессиональная роль, для которой можно принимать отклики неполным резюме'
            type: boolean
          id:
            description: Идентификатор профессиональной роли
            type: string
          text:
            description: Название профессиональной роли
            type: string
        required:
          - id
          - text
          - accept_incomplete_resumes
        type: object
      SuggestsProfessionalRoleItemWithName:
        properties:
          accept_incomplete_resumes:
            description: 'Профессиональная роль, для которой можно принимать отклики неполным резюме'
            example: true
            type: boolean
          id:
            description: Идентификатор профессиональной роли
            example: '21'
            type: string
          name:
            description: Название профессиональной роли
            example: Водитель
            type: string
        required:
          - id
          - name
          - accept_incomplete_resumes
        type: object
      SuggestsProfessionalRoles:
        additionalProperties: false
        description: Подсказки по профессиональным ролям
        properties:
          items:
            description: Информация о найденных профессиональных ролях
            items:
              $ref: '#/components/schemas/SuggestsProfessionalRoleItem'
            title: Массив найденных профессиональных ролей
            type: array
        required:
          - items
        title: Подсказки по профессиональным ролям
        type: object
      SuggestsSearchKeyword:
        additionalProperties: false
        description: Подсказки по ключевым словам поиска
        properties:
          items:
            items:
              $ref: '#/components/schemas/SuggestsSearchKeywordItem'
            title: Массив ключевых слов
            type: array
        required:
          - items
        title: Подсказки по ключевым словам поиска
        type: object
      SuggestsSearchKeywordItem:
        properties:
          text:
            description: Ключевое слово
            type: string
        required:
          - text
        type: object
      SuggestsSkillSet:
        additionalProperties: false
        description: Подсказки по ключевым навыкам
        properties:
          items:
            description: Информация о найденных ключевых навыках
            items:
              $ref: '#/components/schemas/SuggestsSkillSetItem'
            title: Массив ключевых навыков
            type: array
        required:
          - items
        title: Подсказки по ключевым навыкам
        type: object
      SuggestsSkillSetItem:
        properties:
          id:
            description: Идентификатор ключевого навыка
            type: string
          text:
            description: Название ключевого навыка
            type: string
        required:
          - id
          - text
        type: object
      SuggestsSpecializationsWithName:
        properties:
          id:
            description: Идентификатор специализации
            example: '21.17'
            type: string
          name:
            description: Название специализации
            example: Автоперевозки
            type: string
          profarea_id:
            description: Идентификатор профессиональной области
            example: '21'
            type: string
          profarea_name:
            description: Название профессиональной области
            example: 'Транспорт, логистика'
            type: string
        required:
          - id
          - name
          - profarea_id
          - profarea_name
        type: object
      SuggestsVacancyPositionItem:
        properties:
          id:
            description: Идентификатор должности
            example: '2063'
            type: string
          professional_roles:
            description: 'Информация о профессиональных ролях, соответствующих должности'
            items:
              $ref: '#/components/schemas/SuggestsProfessionalRoleItemWithName'
            minItems: 1
            title: 'Массив профессиональных ролей, соответствующих должности'
            type: array
          text:
            description: Название должности
            example: Личный водитель
            type: string
        required:
          - id
          - text
          - professional_roles
        type: object
      SuggestsVacancyPositions:
        additionalProperties: false
        description: Подсказки по должностям вакансий
        properties:
          items:
            description: Информация о найденных должностях вакансий
            items:
              $ref: '#/components/schemas/SuggestsVacancyPositionItem'
            title: Массив найденных должностей вакансий
            type: array
        required:
          - items
        title: Подсказки по должностям вакансий
        type: object
      UserStatusesApplicant:
        properties:
          job_search_status:
            $ref: '#/components/schemas/UserStatusesJobSearchStatus'
          when_can_start_work_status:
            $ref: '#/components/schemas/UserStatusesWhenCanStartWorkStatus'
        title: Пользовательский статусы соискателя
        type: object
      UserStatusesAvailable:
        example:
          job_search_statuses:
            - allowed_when_can_start_work_statuses:
                - tomorrow
                - in_two_weeks
                - more_than_two_weeks
              description: 'Откликаюсь, прохожу собеседования, готов выйти в ближайшее время'
              id: active_search
              name: В активном поиске работы
            - allowed_when_can_start_work_statuses:
                - tomorrow
                - in_two_weeks
                - more_than_two_weeks
              description: 'Хочу получать только подборки вакансий, рассматриваю избранные предложения'
              id: looking_for_offers
              name: Хочу рассмотреть предложения
            - allowed_when_can_start_work_statuses: []
              description: В данный момент не заинтересован в новых предложениях
              id: not_looking_for_job
              name: Пока не ищу работу
          when_can_start_work_statuses:
            - id: tomorrow
              name: Готов выйти завтра
            - id: in_two_weeks
              name: В течение двух недель
            - id: more_than_two_weeks
              name: Через 2 недели и более
        properties:
          job_search_statuses:
            items:
              $ref: '#/components/schemas/UserStatusesJobSearchStatusDictionary'
            type: array
          when_can_start_work_statuses:
            items:
              $ref: '#/components/schemas/UserStatusesWhenCanStartWorkStatus'
            type: array
        required:
          - when_can_start_work_statuses
          - job_search_statuses
        title: Список доступных пользовательских статусов для соискателя
        type: object
      UserStatusesJobSearchStatus:
        properties:
          description:
            description: Детальное описание статуса
            example: 'Откликаюсь, прохожу собеседования'
            type: string
          id:
            description: Идентификатор статуса
            example: active_search
            type: string
          name:
            description: Название статуса
            example: В активном поиске работы
            type: string
        required:
          - id
          - name
        title: Статус поиска работы соискателем
        type: object
      UserStatusesJobSearchStatusDictionary:
        allOf:
          - $ref: '#/components/schemas/UserStatusesJobSearchStatus'
          - properties:
              allowed_when_can_start_work_statuses:
                description: Массив с доступными для выбора `when_can_start_work_status`
                items:
                  type: string
                type: array
            required:
              - allowed_when_can_start_work_statuses
            type: object
        title: Статус поиска работы соискателем
        type: object
      UserStatusesWhenCanStartWorkStatus:
        properties:
          id:
            description: Идентификатор статуса
            example: can_start_tomorrow
            type: string
          name:
            description: Название статуса
            example: Готов выйти завтра
            type: string
        required:
          - id
          - name
        title: Статус "когда смогу выйти на работу"
        type: object
      VacancyAcceptHandicapped:
        description: 'указание, что вакансия доступна для соискателей с инвалидностью'
        nullable: true
        type: boolean
      VacancyAcceptIncompleteResumes:
        description: разрешен ли отклик на вакансию неполным резюме
        nullable: true
        type: boolean
      VacancyAcceptKids:
        description: 'указание, что вакансия доступна для соискателей от 14 лет [подробнее](https://github.com/hhru/api/blob/master/docs/employer_vacancies_accept_kids.md#accept-kids)'
        nullable: true
        type: boolean
      VacancyAcceptTemporary:
        description: 'указание, что вакансия доступна с временным трудоустройством'
        nullable: true
        type: boolean
      VacancyAddress:
        description: адрес
        nullable: true
        properties:
          id:
            description: 'адрес из [списка доступных адресов работодателя](https://github.com/hhru/api/blob/master/docs/employer_addresses.md)'
            nullable: true
            type: string
          show_metro_only:
            description: показывать только метро для указанного адреса
            nullable: true
            type: boolean
        type: object
      VacancyAllowMessages:
        description: 'возможность [переписки с кандидатами](https://inboxemp.hh.ru/) по данной вакансии'
        nullable: true
        type: boolean
      VacancyArea:
        properties:
          id:
            description: 'город публикации из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
            example: 1625
            pattern: ^\d+$
            type: string
        required:
          - id
        type: object
      VacancyAreaOutput:
        properties:
          id:
            description: Идентификатор региона
            type: string
          name:
            description: Название региона
            type: string
        required:
          - id
          - name
        type: object
      VacancyBillingType:
        properties:
          id:
            description: 'биллинговый тип [из справочника vacancy_billing_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        required:
          - id
        type: object
      VacancyBillingTypeOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyBillingType'
          - properties:
              name:
                description: название биллингового типа вакансии
                type: string
            type: object
      VacancyBrandedTemplate:
        additionalProperties: false
        description: |
          Предпочитаемый [брендированный шаблон вакансий работодателя](https://github.com/hhru/api/blob/master/docs/employer_vacancy_branded_templates.md), либо `null`, если не используется у компании.
        nullable: true
        properties:
          id:
            description: Идентификатор брендированного шаблона вакансий
            example: default
            minLength: 1
            nullable: true
            type: string
          name:
            description: Название брендированного шаблона вакансий
            example: Стандартный шаблон
            nullable: true
            type: string
        type: object
      VacancyCode:
        description: внутренний код вакансии
        nullable: true
        type: string
      VacancyDepartment:
        nullable: true
        properties:
          id:
            description: 'департамент [из справочника](https://github.com/hhru/api/blob/master/docs/employer_departments.md), от имени которого размещается вакансия (если данная возможность доступна для компании)'
            nullable: true
            type: string
        type: object
      VacancyDepartmentOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyDepartment'
          - properties:
              name:
                description: название департамента работодателя
                type: string
            type: object
        nullable: true
      VacancyDescription:
        description: 'описание в html, не менее 200 символов'
        type: string
      VacancyDraftAddress:
        description: адрес
        nullable: true
        properties:
          id:
            description: 'адрес из [списка доступных адресов работодателя](https://github.com/hhru/api/blob/master/docs/employer_addresses.md)'
            nullable: true
            pattern: ^\d+$
            type: string
          show_metro_only:
            description: показывать только метро для указанного адреса
            nullable: true
            type: boolean
        type: object
      VacancyDraftAutoPublicationState:
        properties:
          bill_uid:
            description: Номер счета
            type: string
          cart_id:
            description: Идентификатор заказа
            type: string
        required:
          - bill_uid
          - cart_id
      VacancyDraftBillingType:
        properties:
          id:
            description: 'биллинговый тип [из справочника vacancy_billing_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        type: object
      VacancyDraftBrandedTemplate:
        additionalProperties: false
        description: |
          Предпочитаемый [брендированный шаблон вакансий работодателя](https://github.com/hhru/api/blob/master/docs/employer_vacancy_branded_templates.md), либо `null`, если не используется у компании.
        nullable: true
        properties:
          id:
            description: Идентификатор брендированного шаблона вакансий
            example: default
            minLength: 1
            nullable: true
            type: string
        type: object
      VacancyDraftCode:
        description: внутренний код вакансии
        minLength: 1
        nullable: true
        type: string
      VacancyDraftCommon:
        properties:
          accept_handicapped:
            $ref: '#/components/schemas/VacancyAcceptHandicapped'
          accept_incomplete_resumes:
            $ref: '#/components/schemas/VacancyAcceptIncompleteResumes'
          accept_kids:
            $ref: '#/components/schemas/VacancyAcceptKids'
          accept_temporary:
            $ref: '#/components/schemas/VacancyAcceptTemporary'
          allow_messages:
            $ref: '#/components/schemas/VacancyAllowMessages'
          billing_type:
            $ref: '#/components/schemas/VacancyBillingTypeOutput'
          code:
            $ref: '#/components/schemas/VacancyCode'
          department:
            $ref: '#/components/schemas/VacancyDepartmentOutput'
          description:
            $ref: '#/components/schemas/VacancyDescription'
          driver_license_types:
            $ref: '#/components/schemas/VacancyDriverLicenseTypes'
          employment:
            $ref: '#/components/schemas/VacancyEmploymentOutput'
          experience:
            $ref: '#/components/schemas/VacancyExperienceOutput'
          has_test:
            description: Информация о наличии прикрепленного тестового задании к вакансии
            type: boolean
          key_skills:
            $ref: '#/components/schemas/VacancyKeySkills'
          languages:
            $ref: '#/components/schemas/VacancyLanguagesOutput'
          manager:
            $ref: '#/components/schemas/VacancyManager'
          name:
            $ref: '#/components/schemas/VacancyName'
          professional_roles:
            $ref: '#/components/schemas/VacancyProfessionalRolesOutput'
          response_letter_required:
            $ref: '#/components/schemas/VacancyResponseLetterRequired'
          response_notifications:
            $ref: '#/components/schemas/VacancyResponseNotifications'
          response_url:
            $ref: '#/components/schemas/VacancyResponseUrl'
          salary:
            $ref: '#/components/schemas/VacancySalary'
          schedule:
            $ref: '#/components/schemas/VacancyScheduleOutput'
          test:
            $ref: '#/components/schemas/VacancyDraftTest'
          type:
            $ref: '#/components/schemas/VacancyTypeOutput'
          working_days:
            $ref: '#/components/schemas/VacancyWorkingDaysOutput'
          working_time_intervals:
            $ref: '#/components/schemas/VacancyWorkingTimeIntervalsOutput'
          working_time_modes:
            $ref: '#/components/schemas/VacancyWorkingTimeModesOutput'
        required:
          - name
          - description
          - key_skills
          - schedule
          - accept_handicapped
          - accept_kids
          - experience
          - response_letter_required
          - type
          - billing_type
          - allow_messages
          - driver_license_types
          - accept_incomplete_resumes
          - professional_roles
          - manager
          - languages
          - response_notifications
          - has_test
        type: object
      VacancyDraftContacts:
        description: контактная информация
        nullable: true
        properties:
          email:
            description: email
            nullable: true
            type: string
          phones:
            description: список телефонов для связи
            items:
              $ref: '#/components/schemas/VacancyDraftPhoneItem'
            nullable: true
            type: array
        type: object
      VacancyDraftContactsWithFullPhone:
        description: контактная информация
        nullable: true
        properties:
          email:
            description: email
            nullable: true
            type: string
          name:
            description: имя менеджера
            nullable: true
            type: string
          phones:
            description: список телефонов для связи
            items:
              $ref: '#/components/schemas/VacancyDraftPhoneItemWithFullPhone'
            nullable: true
            type: array
        required:
          - phones
          - name
          - email
        type: object
      VacancyDraftCustomEmployerName:
        description: 'название компании для анонимных вакансий (`type.id=anonymous`), например "крупный российский банк". Если не передать, проставится автоматом пустая строка.'
        nullable: true
        type: string
      VacancyDraftDescription:
        description: 'описание в html, минимум 1 символ, для успешной публикации вакансии не менее 200 символов'
        minLength: 1
        type: string
      VacancyDraftDraftCreate:
        properties:
          accept_handicapped:
            $ref: '#/components/schemas/VacancyAcceptHandicapped'
          accept_incomplete_resumes:
            $ref: '#/components/schemas/VacancyAcceptIncompleteResumes'
          accept_kids:
            $ref: '#/components/schemas/VacancyAcceptKids'
          accept_temporary:
            $ref: '#/components/schemas/VacancyAcceptTemporary'
          address:
            $ref: '#/components/schemas/VacancyDraftAddress'
          allow_messages:
            $ref: '#/components/schemas/VacancyAllowMessages'
          area:
            $ref: '#/components/schemas/VacancyArea'
          billing_type:
            $ref: '#/components/schemas/VacancyDraftBillingType'
          branded_template:
            $ref: '#/components/schemas/VacancyBrandedTemplate'
          code:
            $ref: '#/components/schemas/VacancyDraftCode'
          contacts:
            $ref: '#/components/schemas/VacancyDraftContacts'
          custom_employer_name:
            $ref: '#/components/schemas/VacancyDraftCustomEmployerName'
          department:
            $ref: '#/components/schemas/VacancyDepartment'
          description:
            $ref: '#/components/schemas/VacancyDraftDescription'
          driver_license_types:
            $ref: '#/components/schemas/VacancyDriverLicenseTypes'
          employment:
            $ref: '#/components/schemas/VacancyDraftEmployment'
          experience:
            $ref: '#/components/schemas/VacancyExperience'
          key_skills:
            $ref: '#/components/schemas/VacancyDraftKeySkills'
          languages:
            $ref: '#/components/schemas/VacancyLanguages'
          name:
            $ref: '#/components/schemas/VacancyDraftName'
          professional_roles:
            $ref: '#/components/schemas/VacancyDraftProfessionalRoles'
          response_letter_required:
            $ref: '#/components/schemas/VacancyResponseLetterRequired'
          response_notifications:
            $ref: '#/components/schemas/VacancyResponseNotifications'
          response_url:
            $ref: '#/components/schemas/VacancyDraftResponseUrl'
          salary:
            $ref: '#/components/schemas/VacancySalary'
          schedule:
            $ref: '#/components/schemas/VacancySchedule'
          test:
            $ref: '#/components/schemas/VacancyDraftTest'
          type:
            $ref: '#/components/schemas/VacancyDraftType'
          working_days:
            $ref: '#/components/schemas/VacancyWorkingDays'
          working_time_intervals:
            $ref: '#/components/schemas/VacancyWorkingTimeIntervals'
          working_time_modes:
            $ref: '#/components/schemas/VacancyWorkingTimeModes'
        title: Объект создания черновика вакансии
        type: object
      VacancyDraftDraftFull:
        allOf:
          - $ref: '#/components/schemas/VacancyDraftCommon'
          - properties:
              address:
                $ref: '#/components/schemas/VacancyAddress'
              areas:
                description: 'Коды и названия регионов (фед. округа, субъекты федерации, города)'
                items:
                  $ref: '#/components/schemas/VacancyAreaOutput'
                minItems: 1
                type: array
              branded_template:
                $ref: '#/components/schemas/VacancyDraftBrandedTemplate'
              contacts:
                $ref: '#/components/schemas/VacancyDraftContactsWithFullPhone'
              custom_employer_name:
                $ref: '#/components/schemas/VacancyDraftCustomEmployerName'
              meta_info:
                $ref: '#/components/schemas/VacancyDraftVacancyDraftBase'
            required:
              - meta_info
              - areas
              - address
              - contacts
            title: Объект черновика вакансии
            type: object
      VacancyDraftDraftResponse:
        properties:
          found:
            title: Количество найденных черновиков
            type: number
          items:
            description: Список черновиков
            items:
              $ref: '#/components/schemas/VacancyDraftVacancyDraftItem'
            type: array
          page:
            title: Номер текущей страницы
            type: number
          pages:
            title: Количество страниц с черновиками
            type: number
          per_page:
            title: Количество элементов на страницу
            type: number
        required:
          - items
          - found
          - page
          - pages
          - per_page
        title: Успешный ответ
      VacancyDraftDraftResponseSchema:
        allOf:
          - $ref: '#/components/schemas/Id'
          - example:
              $ref: '#/components/examples/VacancyDraftVacancyDraftResponse'
            properties:
              ignored_fields:
                description: 'Поля, которые не были сохранены при создании черновика, вследствие не верного заполнения'
                items:
                  description: Имя проигнорированного поля
                  type: string
                type: array
              name:
                description: Заголовок черновика
                type: string
              publication_ready:
                description: Готовность черновика к публикации
                type: boolean
              validation_errors:
                description: 'Поля, которые были сохранены при создании черновика, с соответствующими ошибками, которые необходимо поправить для успешной публикации вакансии на основе черновика'
                items:
                  $ref: '#/components/schemas/VacancyDraftDraftVacancyError'
                type: array
            required:
              - name
              - publication_ready
            type: object
        type: object
      VacancyDraftDraftVacancyError:
        properties:
          reason:
            description: Причина ошибки
            type: string
          value:
            description: 'Название поля, в котором допущена ошибка'
            type: string
        required:
          - value
        type: object
      VacancyDraftEmployment:
        nullable: true
        properties:
          id:
            description: 'тип занятости из [справочника employment](https://github.com/hhru/api/blob/master/docs/dictionaries.md). По умолчанию или ошибке в поле ставится full'
            nullable: true
            type: string
        type: object
      VacancyDraftKeySkillItem:
        nullable: true
        properties:
          name:
            description: название ключевого навыка
            minLength: 1
            type: string
        title: Объект ключевых навыков
        type: object
      VacancyDraftKeySkills:
        description: 'список ключевых навыков, не более 30'
        items:
          $ref: '#/components/schemas/VacancyDraftKeySkillItem'
        nullable: true
        type: array
      VacancyDraftName:
        description: название
        minLength: 1
        type: string
      VacancyDraftPhoneItem:
        oneOf:
          - properties:
              city:
                description: код города
                pattern: ^\d+$
                type: string
              comment:
                description: комментарий (удобное время для звонка по этому номеру)
                nullable: true
                type: string
              country:
                description: код страны
                pattern: ^\d+$
                type: string
              number:
                description: абонентская часть телефонного номера
                pattern: ^\d+$
                type: string
            required:
              - country
              - city
              - number
            type: object
          - properties:
              comment:
                description: комментарий (удобное время для звонка по этому номеру)
                nullable: true
                type: string
              formatted:
                description: телефонный номер целиком
                pattern: ^\d+$
                type: string
            required:
              - formatted
            type: object
        title: Объект телефона для связи
      VacancyDraftPhoneItemWithFullPhone:
        properties:
          comment:
            description: комментарий (удобное время для звонка по этому номеру)
            nullable: true
            type: string
          formatted:
            description: телефонный номер
            pattern: ^\d+$
            type: string
        title: Объект телефона для связи
        type: object
      VacancyDraftProfessionalRoleItem:
        properties:
          id:
            description: Идентификатор профессиональной роли
            pattern: ^\d+$
            type: string
        title: Объект профессиональной роли
        type: object
      VacancyDraftProfessionalRoles:
        description: список профессиональных ролей
        items:
          $ref: '#/components/schemas/VacancyDraftProfessionalRoleItem'
        type: array
      VacancyDraftPublications:
        properties:
          count:
            description: Количество публикаций
            type: number
          publication_type:
            description: 'Тип публикации (справочник [vacancy_billing_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md))'
            type: string
          vacancy_type:
            description: 'Тип вакансии (справочник [vacancy_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md))'
            type: string
        required:
          - publication_type
          - vacancy_type
          - count
      VacancyDraftResponseUrl:
        description: URL отклика для прямых вакансий (`type.id=direct`)
        minLength: 1
        nullable: true
        type: string
      VacancyDraftTest:
        description: 'объект - [тест](https://github.com/hhru/api/blob/master/docs/employer_tests.md) для вакансии'
        nullable: true
        properties:
          id:
            description: 'тест, который будет добавлен в вакансию'
            nullable: true
            pattern: ^\d+$
            type: string
          required:
            description: флаг обязательности прохождения теста при отклике на вакансию
            nullable: true
            type: boolean
        type: object
      VacancyDraftType:
        properties:
          id:
            description: 'тип из [справочника vacancy_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            minLength: 1
            type: string
        type: object
      VacancyDraftVacancyDraftBase:
        properties:
          auto_publication:
            $ref: '#/components/schemas/VacancyDraftAutoPublicationState'
            description: 'Состояние автопубликации. Объект при активной автопубликации, иначе null'
            nullable: true
            type: object
          completed_fields_percentage:
            description: Процент заполнения черновика
            type: number
          draft_id:
            description: Идентификатор черновика
            minLength: 1
            type: string
          insufficient_publications:
            description: 'Массив объектов с информацией о том, каких публикаций не хватает на счету для публикации вакансии из данного черновика'
            items:
              $ref: '#/components/schemas/VacancyDraftPublications'
            nullable: true
            type: array
          insufficient_quotas:
            description: 'Массив объектов с информацией о том, какие квоты превышены'
            items:
              $ref: '#/components/schemas/VacancyDraftPublications'
            nullable: true
            type: array
          last_change_time:
            description: 'Время изменения черновика (в формате [ISO 8601](https://ru.wikipedia.org/wiki/ISO_8601) с точностью до секунды `YYYY-MM-DDThh:mm:ss±hhmm`)'
            nullable: true
            type: string
          publication_ready:
            description: Готовность черновика к публикации
            type: boolean
          required_publications:
            description: Массив объектов с информацией о необходимых публикациях на счету
            items:
              $ref: '#/components/schemas/VacancyDraftPublications'
            nullable: true
            type: array
        required:
          - completed_fields_percentage
          - draft_id
          - publication_ready
        title: Черновик
        type: object
      VacancyDraftVacancyDraftItem:
        allOf:
          - $ref: '#/components/schemas/VacancyDraftVacancyDraftBase'
          - properties:
              areas:
                description: 'Коды и названия регионов (фед. округа, субъекты федерации, города)'
                items:
                  $ref: '#/components/schemas/VacancyAreaOutput'
                minItems: 1
                type: array
              name:
                description: Название вакансии
                type: string
              publication_type:
                description: 'Тип публикации (справочник [vacancy_billing_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md))'
                type: string
              url:
                description: Url для запроса полной информации черновика
                type: string
              vacancy_type:
                description: 'Тип вакансии (справочник [vacancy_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md))'
                type: string
            required:
              - areas
              - publication_type
              - vacancy_type
              - url
            title: Черновик
            type: object
      VacancyDriverLicenceTypeItem:
        properties:
          id:
            description: 'категория водительских прав. элемент справочника [driver_license_types](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        title: Категория водительских прав
        type: object
      VacancyDriverLicenseTypes:
        description: список требуемых категорий водительских прав
        items:
          $ref: '#/components/schemas/VacancyDriverLicenceTypeItem'
        nullable: true
        type: array
      VacancyEmployment:
        nullable: true
        properties:
          id:
            description: 'тип занятости из [справочника employment](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            nullable: true
            type: string
        type: object
      VacancyEmploymentOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyEmployment'
          - properties:
              name:
                description: название типа занятости
                type: string
            type: object
        nullable: true
      VacancyExperience:
        nullable: true
        properties:
          id:
            description: 'требуемый опыт работы из [справочника experience](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        type: object
      VacancyExperienceOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyExperience'
          - properties:
              name:
                description: название опыта работы
                type: string
            type: object
        nullable: true
      VacancyKeySkillItem:
        nullable: true
        properties:
          name:
            description: название ключевого навыка
            type: string
        title: Объект ключевых навыков
        type: object
      VacancyKeySkills:
        description: 'список ключевых навыков, не более 30'
        items:
          $ref: '#/components/schemas/VacancyKeySkillItem'
        nullable: true
        type: array
      VacancyLanguage:
        nullable: true
        properties:
          id:
            description: идентификатор языка
            type: string
          level:
            properties:
              id:
                description: идентификатор уровня владения языком
                type: string
            required:
              - id
            type: object
        required:
          - id
          - level
        title: Объект языка
        type: object
      VacancyLanguageOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyLanguage'
          - properties:
              level:
                properties:
                  id:
                    description: идентификатор уровня владения языком
                    type: string
                  name:
                    description: название уровня владения языком
                    type: string
                required:
                  - id
                  - name
                type: object
              name:
                description: название языка
                type: string
            required:
              - name
            type: object
      VacancyLanguages:
        description: список языков вакансии
        items:
          $ref: '#/components/schemas/VacancyLanguage'
        type: array
      VacancyLanguagesOutput:
        description: список языков вакансии
        items:
          $ref: '#/components/schemas/VacancyLanguageOutput'
        type: array
      VacancyManager:
        nullable: true
        properties:
          id:
            description: 'контактное лицо (менеджер) по размещаемой вакансии, по умолчанию текущий пользователь'
            nullable: true
            type: string
        type: object
      VacancyName:
        description: название
        type: string
      VacancyProfessionalRoleItem:
        properties:
          id:
            description: Идентификатор профессиональной роли
            type: string
        title: Объект профессиональной роли
        type: object
      VacancyProfessionalRoleItemOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyProfessionalRoleItem'
          - properties:
              name:
                description: название профессиональной роли
                type: string
            type: object
      VacancyProfessionalRolesOutput:
        description: список профессиональных ролей
        items:
          $ref: '#/components/schemas/VacancyProfessionalRoleItemOutput'
        type: array
      VacancyResponseBrandedTemplates:
        properties:
          items:
            description: Список брендированных шаблонов
            items:
              $ref: '#/components/schemas/VacancyBrandedTemplate'
            type: array
        title: Успешный ответ
        type: object
      VacancyResponseLetterRequired:
        description: требовать сопроводительное письмо
        nullable: true
        type: boolean
      VacancyResponseNotifications:
        description: уведомлять о новых откликах
        nullable: true
        type: boolean
      VacancyResponseUrl:
        description: URL отклика для прямых вакансий (`type.id=direct`)
        nullable: true
        type: string
      VacancySalary:
        description: зарплата
        nullable: true
        properties:
          currency:
            description: 'код валюты из [справочника currency](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            nullable: true
            type: string
          from:
            description: нижняя граница зарплаты
            nullable: true
            type: integer
          gross:
            description: признак что границы зарплаты указаны до вычета налогов
            nullable: true
            type: boolean
          to:
            description: верхняя граница зарплаты
            nullable: true
            type: integer
        type: object
      VacancySchedule:
        nullable: true
        properties:
          id:
            description: 'график работы из [справочника schedule](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            nullable: true
            type: string
        type: object
      VacancyScheduleOutput:
        allOf:
          - $ref: '#/components/schemas/VacancySchedule'
          - properties:
              name:
                description: название графика работы
                type: string
            type: object
        nullable: true
      VacancyType:
        properties:
          id:
            description: 'тип из [справочника vacancy_type](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        required:
          - id
        type: object
      VacancyTypeOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyType'
          - properties:
              name:
                description: название типа вакансии
                type: string
            type: object
      VacancyWorkingDayItem:
        properties:
          id:
            description: 'рабочие дни из [справочника working_days](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        title: Рабочий день
        type: object
      VacancyWorkingDayItemOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyWorkingDayItem'
          - properties:
              name:
                description: название рабочего дня
                type: string
            type: object
        nullable: true
      VacancyWorkingDays:
        description: список рабочих дней
        items:
          $ref: '#/components/schemas/VacancyWorkingDayItem'
        nullable: true
        type: array
      VacancyWorkingDaysOutput:
        description: список рабочих дней
        items:
          $ref: '#/components/schemas/VacancyWorkingDayItemOutput'
        nullable: true
        type: array
      VacancyWorkingTimeIntervalItem:
        properties:
          id:
            description: 'временной интервал работы из [справочника working_time_intervals](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        type: object
      VacancyWorkingTimeIntervalItemOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyWorkingTimeIntervalItem'
          - properties:
              name:
                description: название интервала работы
                type: string
            type: object
        nullable: true
      VacancyWorkingTimeIntervals:
        description: список с временными интервалами работы
        items:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervalItem'
        nullable: true
        type: array
      VacancyWorkingTimeIntervalsOutput:
        description: список с временными интервалами работы
        items:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervalItemOutput'
        nullable: true
        type: array
      VacancyWorkingTimeModeItem:
        properties:
          id:
            description: 'режимы времени работы из [справочника working_time_modes](https://github.com/hhru/api/blob/master/docs/dictionaries.md)'
            type: string
        type: object
      VacancyWorkingTimeModeItemOutput:
        allOf:
          - $ref: '#/components/schemas/VacancyWorkingTimeModeItem'
          - properties:
              name:
                description: название интервала работы
                type: string
            type: object
        nullable: true
      VacancyWorkingTimeModes:
        description: список режимов времени работы
        items:
          $ref: '#/components/schemas/VacancyWorkingTimeModeItem'
        nullable: true
        type: array
      VacancyWorkingTimeModesOutput:
        description: список режимов времени работы
        items:
          $ref: '#/components/schemas/VacancyWorkingTimeModeItemOutput'
        nullable: true
        type: array
      _IncludesArea:
        properties:
          id:
            description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
            type: string
          name:
            description: Название региона
            type: string
          url:
            description: Ссылка на информацию о регионе
            type: string
        required:
          - id
          - name
          - url
        title: Регион
      _IncludesLogoUrls:
        properties:
          '90':
            description: URL логотипа с размером менее 90px по меньшей стороне
            type: string
          '240':
            description: URL логотипа с размером менее 240px по меньшей стороне
            type: string
          original:
            description: URL необработанного логотипа
            type: string
        required:
          - '90'
          - '240'
          - original
        title: Ссылка на логотип
        type: object
    securitySchemes:
      OauthToken:
        description: |
          Токен доступа для авторизации в формате `Bearer {ACCESS_TOKEN}` (см. [Авторизация](https://github.com/hhru/api/blob/master/docs/authorization.md))
        scheme: bearer
        type: http
  info:
    contact:
      email: api@hh.ru
      name: API Support
      url: 'https://feedback.hh.ru/'
    description: |
      [Switch to English](https://api.hh.ru/openapi/en/redoc) | По-русски

      В OpenAPI ведется пока что только небольшая часть документации
      [Основная документация](https://github.com/hhru/api)
      # Типы авторизаций
      API поддерживает следующие уровни авторизации:
        - [авторизация приложения](#get-client-auth)
        - [авторизация пользователя](#get-auth)
      <!-- ReDoc-Inject: <security-definitions> -->
    termsOfService: 'https://dev.hh.ru/admin/developer_agreement'
    title: HeadHunter API
    version: 1.0.0
    x-logo:
      altText: HH Logo
      url: 'https://hhcdn.ru/icms/10132131.svg'
  openapi: 3.0.3

  paths:
    /employers:
      get:
        description: 'При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `5000`. Например, возможен запрос `per_page=10&page=499` (выдача с `4991` по `5000` работодателя), но запрос с `per_page=10&page=500` вернёт ошибку (выдача с `5001` до `5010` работодателя)'
        parameters:
          - description: Текст для поиска. Переданное значение ищется в названии и описании работодателя
            in: query
            name: text
            required: false
            schema:
              type: string
          - description: 'Идентификатор региона работодателя, множественный параметр. Идентификаторы регионов можно узнать в [справочнике регионов](https://github.com/hhru/api/blob/master/docs/areas.md)'
            in: query
            name: area
            required: false
            schema:
              type: string
          - description: 'Тип работодателя, множественный параметр. Разрешенные значения перечислены в [справочнике](https://github.com/hhru/api/blob/master/docs/dictionaries.md) в поле `employer_type`'
            in: query
            name: type
            required: false
            schema:
              type: string
          - description: Возвращать только работодателей у которых есть в данный момент открытые вакансии (`true`) или же всех (`false`). По умолчанию — `false`
            in: query
            name: only_with_vacancies
            required: false
            schema:
              type: boolean
          - description: 'Номер страницы с работодателями (считается от `0`, по умолчанию — `0`)'
            in: query
            name: page
            required: false
            schema:
              type: number
          - description: 'Количество элементов на страницу (по умолчанию — 20, максимум — 100 )'
            in: query
            name: per_page
            required: false
            schema:
              type: number
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployersEmployersExample'
                schema:
                  $ref: '#/components/schemas/EmployersEmployersList'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentErrors'
            description: Ошибка в параметрах запроса. В теле ответа может содержаться название параметра с ошибкой
        summary: Поиск работодателя
        tags:
          - Работодатель
      x-name: /employers
    '/employers/{employer_id}':
      get:
        description: Возвращает данные о работодателе со ссылкой на выдачу вакансий этого работодателя
        parameters:
          - description: 'Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Informaciya-o-rabotodatele/paths/~1employers/get)'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployersEmployerInfoExample'
                schema:
                  $ref: '#/components/schemas/EmployersEmployerInfo'
            description: Успешный ответ
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Работодатель не найден
        summary: Информация о работодателе
        tags:
          - Работодатель
      x-name: '/employers/{employer_id}'
    '/employers/{employer_id}/manager_types':
      get:
        parameters:
          - description: Идентификатор работодателя
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerManagerTypes'
                schema:
                  $ref: '#/components/schemas/EmployerManagerTypesResponse'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не имеет прав на просмотр типов менеджеров данного работодателя
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
        summary: Справочник типов и прав менеджера
        tags:
          - Менеджеры работодателя
      x-name: '/employers/{employer_id}/manager_types'
    '/employers/{employer_id}/managers':
      get:
        parameters:
          - description: Идентификатор работодателя
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerManagers'
                schema:
                  $ref: '#/components/schemas/EmployerManagersResponse'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не имеет прав на просмотр менеджеров данного работодателя
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
        summary: Список менеджеров работодателя
        tags:
          - Менеджеры работодателя
      post:
        parameters:
          - description: 'Идентификатор работодателя. Чтобы получить его, используйте метод [Информация о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/json:
              examples:
                Пример запроса:
                  $ref: '#/components/examples/AddEmployerManager'
              schema:
                $ref: '#/components/schemas/EmployerManagersAddEmployerManager'
          required: true
        responses:
          '201':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerManagerId'
                schema:
                  $ref: '#/components/schemas/EmployerManagersEmployerManagerId'
            description: Менеджер добавлен
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
            description: Параметры во входном JSON переданы с ошибкой
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
            description: Неподходящая авторизация или другие причины
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: 'Указанный работодатель не существует, или пользователь не имеет прав на создание менеджера'
        summary: Добавление менеджера
        tags:
          - Менеджеры работодателя
      x-name: '/employers/{employer_id}/managers'
    '/employers/{employer_id}/managers/{manager_id}':
      delete:
        description: 'Удаление менеджера занимает некоторое время. По этой причине, если сразу после успешного удаления менеджера вы запросите, например, список менеджеров, в ответе может вернуться удаленный менеджер.'
        parameters:
          - description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - description: Идентификатор менеджера
            in: path
            name: manager_id
            required: true
            schema:
              type: string
          - description: 'Идентификатор менеджера, которому передаются данные, связанные с удаляемым менеджером, в частности: вакансии, отклики, папки отобранных резюме, комментарии к соискателю, автопоиски и т. п.'
            in: query
            name: successor_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '204':
            description: 'Успешное выполнение запроса, менеджер удалён'
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
            description: Параметры запроса переданы с ошибкой
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
            description: Неподходящая авторизация или иные причины отказа
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: 'Указанный работодатель или менеджер не существует, или пользователь не имеет прав на удаление данного менеджера'
        summary: Удаление менеджера
        tags:
          - Менеджеры работодателя
      get:
        parameters:
          - description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - description: Идентификатор менеджера
            in: path
            name: manager_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerManagerInfo'
                schema:
                  $ref: '#/components/schemas/EmployerManagersEmployerManagerInfo'
            description: Успешный ответ
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации
        summary: Получение информации о менеджере
        tags:
          - Менеджеры работодателя
      put:
        parameters:
          - description: Идентификатор работодателя
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - description: Идентификатор менеджера
            in: path
            name: manager_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/json:
              examples:
                Пример запроса:
                  $ref: '#/components/examples/EditEmployerManagers'
              schema:
                $ref: '#/components/schemas/EmployerManagersManagerData'
                type: object
          required: true
        responses:
          '200':
            description: Параметры менеджера отредактированы
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
            description: Параметры запроса переданы с ошибкой
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
            description: Текущий пользователь не имеет прав на редактирование менеджера или иные причины
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: 'Указанный работодатель или менеджер не существует, или пользователь не имеет прав на редактирование менеджера'
        summary: Редактирование менеджера
        tags:
          - Менеджеры работодателя
      x-name: '/employers/{employer_id}/managers/{manager_id}'
    '/employers/{employer_id}/managers/{manager_id}/limits/resume':
      get:
        parameters:
          - description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get).'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - description: 'Идентификатор менеджера, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
            in: path
            name: manager_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerManagerLimits'
                schema:
                  $ref: '#/components/schemas/EmployerManagersEmployerManagerLimits'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Неподходящая авторизация
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации
        summary: Дневной лимит просмотра резюме для текущего менеджера
        tags:
          - Менеджеры работодателя
      x-name: '/employers/{employer_id}/managers/{manager_id}/limits/resume'
    '/employers/{employer_id}/managers/{manager_id}/settings':
      get:
        description: |
          Возвращает информацию о предпочтениях менеджера.

          Проще всего получить URL из поля `manager_settings_url` объекта `manager`
          в [информации о текущем пользователе](#tag/Rabotodatelskie/paths/~1me/get).

          Предпочтения менеджера *не влияют* на действия в API по умолчанию. Например, брендированный шаблон оформления
          (`default_vacancy_branded_template`) не будет применен автоматически при публикации вакансии, если шаблон не был передан.
          Приложение может использовать эту информацию для того, чтобы реализовать логику предзаполнения полей.
        parameters:
          - description: Идентификатор работодателя.
            example: '1455'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - description: Идентификатор менеджера.
            example: '87654321'
            in: path
            name: manager_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ManagerSettings'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не является менеджером.
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: 'Менеджер не существует, либо просмотр его настроек не доступен.'
        summary: Предпочтения менеджера
        tags:
          - Менеджеры работодателя
      x-name: '/employers/{employer_id}/managers/{manager_id}/settings'
    '/employers/{employer_id}/services/payable_api_actions/active':
      get:
        description: |
          Каждая подключенная услуга отображается отдельным объектом в массиве `items`, даже при условии, что подключено несколько услуг одного типа.
          Если у работодателя нет активных услуг, то в ответе придет пустой массив `items`.
        parameters:
          - description: Идентификатор работодателя
            in: path
            name: employer_id
            required: true
            schema:
              type: integer
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/EmployerServices'
                schema:
                  $ref: '#/components/schemas/EmployerServicesEmployerServices'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не является работодателем
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
        summary: Информация по активным услугам API для платных методов
        tags:
          - Услуги работодателя
      x-name: '/employers/{employer_id}/services/payable_api_actions/active'
    '/employers/{employer_id}/vacancy_branded_templates':
      get:
        description: |
          Внимание! Значения в справочниках могут поменяться в любой момент. Не нужно завязываться на них.

          Использование брендированных шаблонов вакансии доступно работодателям, оплатившим и активировавшим соответствующую 
          услугу. Подробнее на сайте [hh.ru](https://hh.ru/article/brand).

          Брендированные шаблоны можно использовать при 
          [публикации и редактировании вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#branded-template-field).
        parameters:
          - description: Идентификатор работодателя
            example: '12345'
            in: path
            name: employer_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/VacancyResponseBrandedTemplates'
            description: Успешный ответ
          '403':
            $ref: '#/components/responses/ErrorBadAuthorization'
          '404':
            $ref: '#/components/responses/ErrorNotFound'
        summary: Список доступных шаблонов работодателя.
        tags:
          - Информация о работодателе
      x-name: '/employers/{employer_id}/vacancy_branded_templates'
    /languages:
      get:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/Languages'
                schema:
                  $ref: '#/components/schemas/DictionariesLangResponse'
            description: Успешный ответ
        summary: Возвращает список всех языков
        tags:
          - Общие справочники
      x-name: /languages
    /locales:
      get:
        description: |
          Возвращает список возможных значений (доступных локалей) в поле `id`. Список локалей будет зависеть от указанного сайта (параметр `host`). В любом запросе к API можно указывать параметр `?locale=` для передачи значения локали (языка).
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/Locales'
                schema:
                  $ref: '#/components/schemas/LocalesResponse'
            description: Успешный ответ
        summary: Список доступных локалей
        tags:
          - Общие справочники
      x-name: /locales
    /locales/resume:
      get:
        description: |
          Возвращает справочник возможных локалей резюме. Подколлекция [справочника локалей](#tag/Spravochniki/paths/locales/~1locales/get).

          Изменив локаль, можно, например, создать резюме на английском языке.
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/Locales'
                schema:
                  $ref: '#/components/schemas/LocalesResponse'
            description: Успешный ответ
        summary: Список доступных локалей для резюме
        tags:
          - Общие справочники
      x-name: /locales/resume
    /manager_accounts/mine:
      get:
        description: |
          Возвращает список рабочих аккаунтов менеджера и информацию об основном и текущем аккаунте.

          Для работы под определенным аккаунтом необходимо передать значение account_id, полученное из списка, в заголовке:

          `X-Manager-Account-Id: {account_id}`

          Использовать данный заголовок можно во всех методах, доступных для работодателей.

          В заголовке можно передавать account_id основного аккаунта, который также подразумевается по умолчанию, при отсутствии заголовка.
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ManagerAccounts'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации.
        summary: Рабочие аккаунты менеджера
        tags:
          - Менеджеры работодателя
      x-name: /manager_accounts/mine
    /me:
      get:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MeProfile'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации
        summary: Информация о текущем пользователе
        tags:
          - Информация о соискателе
          - Информация о менеджере
          - Информация о приложении
      post:
        description: Редактирование ФИО или изменение флага «ищу работу». Данные можно редактировать только группами
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/x-www-form-urlencoded:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MeChangeName'
                  - $ref: '#/components/schemas/MeSetInSearch'
        responses:
          '204':
            description: 'Успешный ответ, данные переданы'
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentErrors'
            description: 'Переданы не все поля, или параметры относятся к разным группам'
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации. Пользователь не является соискателем
        summary: Редактирование информации авторизованного пользователя
        tags:
          - Информация о соискателе
      x-name: /me
    /metro:
      get:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/MetroMetro'
                schema:
                  $ref: '#/components/schemas/MetroMetroResponse'
            description: Успешный ответ
        summary: Список станций метро во всех городах
        tags:
          - Общие справочники
      x-name: /metro
    '/metro/{city_id}':
      get:
        parameters:
          - description: Идентификатор города
            in: path
            name: city_id
            required: true
            schema:
              type: integer
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/MetroCityMetro'
                schema:
                  $ref: '#/components/schemas/MetroCityMetroItem'
            description: Успешный ответ
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Город с указанным идентификатором не существует
        summary: Список станций метро в указанном городе
        tags:
          - Общие справочники
      x-name: '/metro/{city_id}'
    /oauth/token:
      post:
        description: |
          * [Получение авторизации пользователя](#get-auth)
            * [Правила формирования специального redirect_uri](#redirect_uri)
            * [Процесс авторизации](#get-auth-process)
            * [Успешное получение временного `authorization_code`](#get-authorization_code)
            * [Получение access и refresh токенов](#get-tokens)
          * [Обновление пары access и refresh токенов](#refresh_token)
          * [Запрос авторизации под другим пользователем](#force_login)
          * [Авторизация под разными рабочими аккаунтами](#implant)
          * [Получение авторизации приложения](#get-client-auth)


          ## Авторизация пользователя
          <a name="get-auth"></a>
          ### Получение авторизации пользователя
          Для выполнения запросов от имени пользователя необходимо пользоваться токеном пользователя.

          В начале приложению необходимо направить пользователя (открыть страницу) по адресу:

          ```
          https://hh.ru/oauth/authorize?
          response_type=code&
          client_id={client_id}&
          state={state}&
          redirect_uri={redirect_uri}
          ```

          Обязательные параметры:

          * `response_type=code` — указание на способ получения авторизации, используя `authorization code`
          * `client_id` — идентификатор, полученный при создании приложения


          Необязательные параметры:

          * `state` — в случае указания, будет включен в ответный редирект.
          Это позволяет исключить возможность взлома путём подделки межсайтовых
          запросов. Подробнее об этом:
          [RFC 6749. Section 10.12](http://tools.ietf.org/html/rfc6749#section-10.12)
          * `redirect_uri` — uri для перенаправления пользователя после
          авторизации. Если не указать, используется из настроек приложения. При
          наличии происходит валидация значения. Вероятнее всего, потребуется сделать
          urlencode значения параметра.

          <a name="redirect_uri"></a>
          ### Правила формирования специального redirect_uri

          К примеру, если в настройках сохранен `http://example.com/oauth`, то разрешено
          указывать:

          * `http://www.example.com/oauth` — поддомен;
          * `http://www.example.com/oauth/sub/path` — уточнение пути;
          * `http://example.com/oauth?lang=RU` — дополнительный параметр;
          * `http://www.example.com/oauth/sub/path?lang=RU` — всё вместе.

          Запрещено:

          * `https://example.com/oauth` — различные протоколы;
          * `http://wwwexample.com/oauth` — различные домены;
          * `http://wwwexample.com/` — другой путь;
          * `http://example.com/oauths` — другой путь;
          * `http://example.com:80/oauths` — указание изначально отсутствующего порта;


          <a name="get-auth-process"></a>
          ### Процесс авторизации

          Если пользователь не авторизован на сайте, ему будет показана форма
          авторизации на сайте. После прохождения авторизации на сайте, пользователю
          будет выведена форма с запросом разрешения доступа вашего приложения к его
          персональным данным.

          Если пользователь не разрешает доступ приложению, пользователь будет
          перенаправлен на указанный `redirect_uri` с `?error=access_denied` и
          `state={state}`, если таковой был указан при первом запросе.

          <a name="get-authorization_code"></a>
          ### Успешное получение временного `authorization_code`

          В случае разрешения прав, в редиректе будет указан
          временный `authorization_code`:

          ```http
          HTTP/1.1 302 FOUND
          Location: {redirect_uri}?code={authorization_code}
          ```

          Если пользователь авторизован на сайте и доступ данному приложению однажды
          ранее выдан, ответом будет сразу вышеописанный редирект с `authorization_code`
          (без показа формы логина и выдачи прав).


          <a name="get-tokens"></a>
          ### Получение access и refresh токенов

          После получения `authorization_code` приложению необходимо сделать сервер-сервер запрос `POST https://hh.ru/oauth/token` для обмена полученного
          `authorization_code` на `access_token`.

          В теле запроса необходимо передать [дополнительные параметры](#requiered_parameters).

          Тело запроса необходимо передавать в стандартном
          `application/x-www-form-urlencoded` с указанием соответствующего заголовка
          `Content-Type`.

          `authorization_code` имеет довольно короткий срок жизни, при его истечении
          необходимо запросить новый.

          <a name="refresh_token"></a>
          ### Обновление пары access и refresh токенов
          `access_token` также имеет срок жизни (ключ `expires_in`, в секундах), при его
          истечении приложение должно сделать запрос с `refresh_token` для получения
          нового.

          Запрос необходимо делать в `application/x-www-form-urlencoded`.

          ```
          POST https://hh.ru/oauth/token
          ```

          В теле запроса необходимо передать [дополнительные параметры](#required_parameters)

          `refresh_token` можно использовать только один раз и только по истечению
          срока действия `access_token`.

          После получения новой пары access и refresh токенов, их необходимо использовать
          в дальнейших запросах в api и запросах на продление токена.

          <a name="force_login"></a>
          ### Запрос авторизации под другим пользователем

          Возможен следующий сценарий:

          1. Приложение перенаправляет пользователя на сайт с запросом авторизации.
          2. Пользователь на сайте уже авторизован и данному приложение доступ уже был
          разрешен.
          3. Пользователю будет предложена возможность продолжить работу под текущим аккаунтом,
          либо зайти под другим аккаунтом.

          Если есть необходимость, чтобы на шаге 3 сразу происходило перенаправление (redirect) с временным токеном,
          необходимо добавить к запросу `/oauth/authorize...` параметр `skip_choose_account=true`.
          В этом случае автоматически выдаётся доступ пользователю авторизованному на сайте.

          Если есть необходимость всегда показывать форму авторизации, приложение может
          добавить к запросу `/oauth/authorize...` параметр `force_login=true`. В этом
          случае, пользователю будет показана форма авторизации с логином и паролем
          даже в случае, если пользователь уже авторизован.

          Это может быть полезно приложениям, которые предоставляют сервис только для
          соискателей. Если пришел пользователь-работодатель, приложение может предложить
          пользователю повторно разрешить доступ на сайте, уже указав
          другую учетную запись.

          Также, после авторизации приложение может показать пользователю сообщение:

          ```
          Вы вошли как %Имя_Фамилия%. Это не вы?
          ```
          и предоставить ссылку с `force_login=true` для возможности захода под
          другим логином.

          <a name="implant"></a>
          ### Авторизация под разными рабочими аккаунтами

          Для получения списка рабочих аккаунтов менеджера и для работы под разными рабочими аккаунтами менеджера необходимо прочитать документацию по [рабочим аккаунтам менеджера](#https://github.com/hhru/api/blob/master/docs/manager_accounts.md)


          <a name="get-client-auth"></a>
          ## Авторизация приложения

          Токен приложения необходимо сгенерировать 1 раз.
          В случае, если токен был скомпрометирован, его нужно запросить еще раз. При этом ранее выданный токен отзывается.
          Владелец приложения может посмотреть актуальный `access_token` для приложения на сайте [https://dev.hh.ru/admin](https://dev.hh.ru/admin). В случае, если вы еще ни разу [не получали токен приложения](#get-client-token), токен отображаться не будет.

          <a name="get-client-token"></a>
          ### Получение токена приложения
          Для получения `access_token` необходимо сделать запрос:

          ```
          POST https://hh.ru/oauth/token
          ```

          В теле запроса необходимо передать [дополнительные параметры](#required_parameters).
          Тело запроса необходимо передавать в стандартном
          `application/x-www-form-urlencoded` с указанием соответствующего заголовка `Content-Type`.

          Данный `access_token` имеет **неограниченный** срок жизни. При повторном запросе ранее выданный токен отзывается и выдается новый. Запрашивать `access_token` можно не чаще, чем один раз в 5 минут.

          В случае компрометации токена необходимо запросить токен заново!
        requestBody:
          content:
            application/x-www-form-urlencoded:
              examples:
                authorization_code:
                  value:
                    client_id: ETVQdMs2n9VKw7SMXkh9nX5H
                    client_secret: 95dNjB8FmtxQsmygm6dtEy53
                    code: 29CtxMcaA8pRFDYyC8e8Gkm4
                    grant_type: authorization_code
                    redirect_uri: 'http://www.example.com/oauth'
                client_credentials:
                  value:
                    client_id: ETVQdMs2n9VKw7SMXkh9nX5H
                    client_secret: 95dNjB8FmtxQsmygm6dtEy53
                    grant_type: client_credentials
                refresh_token:
                  value:
                    grant_type: refresh_token
                    refresh_token: xuLNvUSv7FYM4MPfXDP9aJWe
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthCode'
                  - $ref: '#/components/schemas/AuthRefreshToken'
                  - $ref: '#/components/schemas/AuthClientCredentials'
          description: |
            <a name="required_parameters"></a>
            В зависимости от способа получения токена `grant_type` необходимо передавать различные наборы параметров.
          required: true
        responses:
          '200':
            content:
              application/json:
                examples:
                  app auth:
                    value:
                      access_token: Bh3JBzcbPxcwxQJtWuHTUV7H
                      type: bearer
                  user auth:
                    value:
                      access_token: Bh3JBzcbPxcwxQJtWuHTUV7H
                      expires_in: 1209600
                      refresh_token: xuLNvUSv7FYM4MPfXDP9aJWe
                      type: bearer
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/AuthUserToken'
                    - $ref: '#/components/schemas/AuthAppToken'
            description: Успешный ответ
          '400':
            content:
              application/json:
                examples:
                  account is locked:
                    value:
                      error: invalid_request
                      error_description: account is locked
                      summary: 'Пользовательский аккаунт заблокирован, пользователь должен обратиться в [службу поддержки сайта](https://github.com/hhru/api#feedback)'
                  account not found:
                    value:
                      error: invalid_request
                      error_description: account not found
                      summary: Передана неправильная пара `client_id` и `client_secret`
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/AuthInvalidRequestError'
                    - $ref: '#/components/schemas/AuthInvalidClientError'
                    - $ref: '#/components/schemas/AuthInvalidGrantError'
                    - $ref: '#/components/schemas/AuthUnsupportedGrantTypeError'
            description: Ошибка параметров запроса.
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Действие запрещено.
        servers:
          - url: 'https://hh.ru'
        summary: Получение access-токена
        tags:
          - Авторизация приложения
          - Авторизация работодателя
          - Авторизация соискателя
      x-name: /oauth/token
    /professional_roles:
      get:
        description: |
          Возвращает профессиональные роли, их категории и другую информацию о профессиональных ролях.
          Профессиональные роли приходят на замену [специализациям](https://github.com/hhru/api/blob/master/docs/specializations.md). В настоящее время профессиональные роли и специализации используются параллельно для обеспечения обратной совместимости.
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProfessionalRolesCatalog'
            description: Успешный ответ
          '400':
            $ref: '#/components/responses/ErrorBadArgument'
        summary: Справочник профессиональных ролей
        tags:
          - Общие справочники
      x-name: /professional_roles
    /resume_phone_confirm:
      post:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/x-www-form-urlencoded:
              schema:
                properties:
                  code:
                    description: Код для подтверждения
                    example: 5675
                    type: string
                  phone:
                    description: Телефон который надо подтвердить
                    example: 8(454)555-55-55
                    type: string
                required:
                  - phone
                  - code
                type: object
        responses:
          '200':
            description: 'Успешный ответ, номер верифицирован'
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentErrors'
            description: Ошибки в аргументах
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации
        summary: Подтвердить телефон кодом
        tags:
          - Резюме. Работа с телефоном
      x-name: /resume_phone_confirm
    /resume_phone_generate_code:
      post:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/x-www-form-urlencoded':
              schema:
                properties:
                  phone:
                    description: Телефон на который надо отправить подтверждающий код
                    type: string
                required:
                  - phone
                type: object
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResumePhoneGenerateCodeGenerateCode'
            description: Успешно отправлено
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentErrors'
            description: Ошибки в аргументах
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации.
        summary: Отправить код подтверждения для телефона резюме
        tags:
          - Резюме. Работа с телефоном
      x-name: /resume_phone_generate_code
    /resume_should_send_sms:
      get:
        parameters:
          - description: Номер телефона
            in: query
            name: phone
            required: true
            schema:
              type: integer
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResumeShouldSendSmsPhone'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadArgumentErrors'
            description: Ошибки в аргументах
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Ошибка авторизации
        summary: Получить информацию о телефоне соискателя
        tags:
          - Резюме. Работа с телефоном
      x-name: /resume_should_send_sms
    /suggests/area_leaves:
      get:
        description: 'Также доступна загрузка [полного дерева регионов](https://github.com/hhru/api/blob/master/docs/areas.md#areas) и [части дерева от определенного элемента](https://github.com/hhru/api/blob/master/docs/areas.md#item)'
        parameters:
          - description: Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsSuggestsAreas'
                schema:
                  $ref: '#/components/schemas/SuggestsAreas'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: 'Подсказки по всем регионам, являющимися листами в дереве регионов'
        tags:
          - Подсказки
      x-name: /suggests/area_leaves
    /suggests/areas:
      get:
        description: 'Также доступна загрузка [полного дерева регионов](https://github.com/hhru/api/blob/master/docs/areas.md#areas) и [части дерева от определенного элемента](https://github.com/hhru/api/blob/master/docs/areas.md#item)'
        parameters:
          - description: Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsSuggestsAreas'
                schema:
                  $ref: '#/components/schemas/SuggestsAreas'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по всем регионам
        tags:
          - Подсказки
      x-name: /suggests/areas
    /suggests/companies:
      get:
        description: 'Данные из этой подсказки можно использовать, например, для выбора компании при заполнении опыта работы [в резюме](https://github.com/hhru/api/blob/master/docs/resumes.md#create_edit). Чтобы найти организации, которые могут публиковать вакансии, используйте [поиск по компаниям](https://github.com/hhru/api/blob/master/docs/employers.md#search)'
        parameters:
          - description: Текст для поиска организации. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsCompanies'
                schema:
                  $ref: '#/components/schemas/SuggestsCompanies'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по организациям
        tags:
          - Подсказки
      x-name: /suggests/companies
    /suggests/educational_institutions:
      get:
        description: 'Чтобы узнать список факультетов, обратитесь к [соответствующему методу](https://github.com/hhru/api/blob/master/docs/faculties.md)'
        parameters:
          - description: Текст для поиска университета. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsEducationalInstitutions'
                schema:
                  $ref: '#/components/schemas/SuggestsEducationalInstitutions'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по названиям университетов
        tags:
          - Подсказки
      x-name: /suggests/educational_institutions
    /suggests/fields_of_study:
      get:
        parameters:
          - description: Текст для поиска специализаций. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsFieldsOfStudy'
                schema:
                  $ref: '#/components/schemas/SuggestsFieldsOfStudy'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по специализациям
        tags:
          - Подсказки
      x-name: /suggests/fields_of_study
    /suggests/positions:
      get:
        parameters:
          - description: Текст для поиска должности. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            example: водитель
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsSuggestsPositions'
                schema:
                  $ref: '#/components/schemas/SuggestsPositions'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по должностям резюме
        tags:
          - Подсказки
      x-name: /suggests/positions
    /suggests/professional_roles:
      get:
        parameters:
          - description: Текст для поиска профессиональной роли. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            example: водитель
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsProfessionalRoles'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по профессиональным ролям
        tags:
          - Подсказки
      x-name: /suggests/professional_roles
    /suggests/resume_search_keyword:
      get:
        description: 'Предназначены для использования в поле `text` при [поиске резюме](https://github.com/hhru/api/blob/master/docs/resumes_search.md#search-params). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске резюме'
        parameters:
          - description: Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsResumeSearchKeyword'
                schema:
                  $ref: '#/components/schemas/SuggestsSearchKeyword'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по ключевым словам поиска резюме
        tags:
          - Подсказки
      x-name: /suggests/resume_search_keyword
    /suggests/skill_set:
      get:
        parameters:
          - description: Текст для поиска ключевых навыков. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsSkillSet'
                schema:
                  $ref: '#/components/schemas/SuggestsSkillSet'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по ключевым навыкам
        tags:
          - Подсказки
      x-name: /suggests/skill_set
    /suggests/vacancy_positions:
      get:
        parameters:
          - description: Текст для поиска должности в вакансии. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            example: водитель
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsVacancyPositions'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по должностям вакансий
        tags:
          - Подсказки
      x-name: /suggests/vacancy_positions
    /suggests/vacancy_search_keyword:
      get:
        description: 'Предназначены для использования в поле `text` при [поиске вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#search). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске вакансий'
        parameters:
          - description: Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
            in: query
            name: text
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/SuggestsVacancySearchKeyword'
                schema:
                  $ref: '#/components/schemas/SuggestsSearchKeyword'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuggestsErrors'
            description: Ошибки запроса
        summary: Подсказки по ключевым словам поиска вакансий
        tags:
          - Подсказки
      x-name: /suggests/vacancy_search_keyword
    /user_statuses/available:
      get:
        parameters:
          - description: 'Версия набора статусов в словаре, возможные варианты 1 (по умолчанию) или 2'
            in: query
            name: version
            required: false
            schema:
              type: integer
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserStatusesAvailable'
            description: Успешный ответ
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadJsonDataErrors'
            description: Указана несуществующая версия
          '403':
            $ref: '#/components/responses/ErrorBadAuthorization'
        summary: Справочник доступных пользовательских статусов
        tags:
          - Общие справочники
          - Соискательские статусы
      x-name: /user_statuses/available
    /vacancies/drafts:
      get:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/VacanciesDraft'
                schema:
                  $ref: '#/components/schemas/VacancyDraftDraftResponse'
            description: Успешный ответ
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не является работодателем
        summary: Получение списка черновиков вакансий
        tags:
          - Черновики вакансий
      post:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/json:
              examples:
                Пример запроса:
                  $ref: '#/components/examples/VacancyDraftVacancyDraftCreation'
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftCreate'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/VacancyDraftDraftResponseSchema'
            description: Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadJsonErrors'
            description: Переданный формат не json
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Запрос выполнен не с авторизацией работодателя
          '429':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsDraftError'
            description: Превышено допустимое количество черновиков
        summary: Создание черновика вакансии
        tags:
          - Черновики вакансий
      x-name: /vacancies/drafts
    '/vacancies/drafts/{draft_id}':
      delete:
        parameters:
          - description: Идентификатор черновика
            in: path
            name: draft_id
            required: true
            schema:
              type: string
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '204':
            description: 'Успешное выполнение запроса, черновик удалён'
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не является работодателем
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Черновик не найден или у пользователя нет прав на удаление данного черновика
        summary: Удаление черновика вакансии
        tags:
          - Черновики вакансий
      get:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '200':
            content:
              application/json:
                examples:
                  Пример ответа:
                    $ref: '#/components/examples/VacancyDraftVacancyDraftFull'
                schema:
                  $ref: '#/components/schemas/VacancyDraftDraftFull'
            description: Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Текущий пользователь не является работодателем
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Черновик не найден или пользователь не имеет прав на просмотр указанного черновика
        summary: Получение черновика вакансии
        tags:
          - Черновики вакансий
      put:
        parameters:
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        requestBody:
          content:
            application/json:
              examples:
                Пример запроса:
                  $ref: '#/components/examples/VacancyDraftVacancyDraftCreation'
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftCreate'
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/VacancyDraftDraftResponseSchema'
            description: Успешный ответ содержит информацию по измененому черновику и дополнительную информацию по полям
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadJsonErrors'
            description: Переданный формат не json
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Запрос выполнен не с авторизацией работодателя или черновик не был создан вами
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Черновик не найден
        summary: Изменение черновика вакансии
        tags:
          - Черновики вакансий
      x-name: '/vacancies/drafts/{draft_id}'
    '/vacancies/drafts/{draft_id}/publish':
      post:
        parameters:
          - description: Идентификатор черновика вакансии
            example: '1110031'
            in: path
            name: draft_id
            required: true
            schema:
              type: string
          - description: Форсировать добавление дубликата
            in: query
            name: ignore_duplicates
            required: false
            schema:
              type: boolean
          - description: Публикация вакансии на основе черновика c ролями вместо специализаций
            in: query
            name: with_professional_roles
            required: false
            schema:
              type: boolean
          - $ref: '#/components/parameters/HHUserAgent'
          - $ref: '#/components/parameters/Locale'
          - $ref: '#/components/parameters/Host'
        responses:
          '201':
            content:
              application/json:
                schema:
                  nullable: false
                  properties:
                    vacancy_ids:
                      example:
                        - 30251619
                        - 30251620
                      items:
                        type: number
                      minItems: 1
                      type: array
                  type: object
            description: Массив идентификаторов опубликованных вакансий
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsVacancyErrors'
            description: Ошибки в полях при добавлении вакансии
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
            description: Запрос выполнен не с авторизацией работодателя
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorsNotFoundErrors'
            description: Черновик не найден
        summary: Публикация вакансии на основе черновика
        tags:
          - Черновики вакансий
      x-name: '/vacancies/drafts/{draft_id}/publish'
  security:
    - OauthToken: []
  servers:
    - description: hhapi production server
      url: 'https://api.hh.ru'
  tags:
    - description: '<a name="app_auth"></a>Методы для получение токена [приложения](#get-client-auth).'
      name: Авторизация приложения
    - description: 'Методы для получение токена [пользователя](#get-auth).'
      name: Авторизация соискателя
    - description: 'Методы для получение токена [пользователя](#get-auth).'
      name: Авторизация работодателя
    - description: Методы для работы с черновиками вакансий
      name: Черновики вакансий
    - description: Методы для работы со статусами соискателя
      name: Соискательские статусы
    - description: Действия с резюме соискателя связанные с отправкой/получением информации на его телефон
      name: Резюме. Работа с телефоном
    - description: Методы для работы с менеджерами работодателя
      name: Менеджеры работодателя
    - description: Методы для получения справочной информации независимые от авторизации
      name: Общие справочники
    - description: 'Методы для получения справочной информации в виде списка, элементы которого частично или полностью могут совпадать со значением, отправленным в одном из параметров'
      name: Подсказки
    - description: Методы для просмотра информации об авторизованном менеджере
      name: Информация о менеджере
    - description: Методы для просмотра информации об авторизованном соискателе
      name: Информация о соискателе
    - description: Методы для просмотра информации о приложении
      name: Информация о приложении
    - description: Методы для получения информации о компании текущего менеджера
      name: Информация о работодателе
  x-tagGroups:
    - name: Работодатель
      tags:
        - Авторизация работодателя
        - Информация о менеджере
        - Информация о работодателе
        - Черновики вакансий
        - Услуги работодателя
        - Менеджеры работодателя
    - name: Соискатель
      tags:
        - Авторизация соискателя
        - Резюме. Работа с телефоном
        - Информация о соискателе
        - Соискательские статусы
    - name: Общедоступные методы
      tags:
        - Общие справочники
        - Подсказки
        - Работодатель
    - name: Приложение
      tags:
        - Авторизация приложения
        - Информация о приложении
contentType: yaml
